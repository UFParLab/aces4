import "rccsd_rhf_defs.sialx"
                           SIAL LAMBDA_SV1     
      index kiter    = 1: cc_iter  
      index jiter    = 1: cc_iter
      index   kbeg   = 1: scf_beg # Change to cc_beg
      index   korder = 1: scf_hist # Change to cc_hist
      index   kdiis  = 1: 30
      index   k1diis = 1: 30
      index   jdiis  = 1: 30
      index   j1diis = 1: 30
      index      D1  = 1: 30
      index      D2  = 1: 30
      index   kptr1  = 1: 2
      index   kptr2  = 1: 2
      index   kone   = 1: 1
      index   ixyz   = 1: 3

#
      index smu      = 1: norb
      aoindex mu     = 1: norb
      aoindex nu     = 1: norb
      aoindex lambda = 1: norb
      aoindex sigma  = 1: norb
#
      moaindex i = baocc: eaocc
      moaindex i1= baocc: eaocc
      moaindex i2= baocc: eaocc
      moaindex i3= baocc: eaocc
      moaindex i4= baocc: eaocc
#
      moaindex a = bavirt: eavirt
      moaindex a1= bavirt: eavirt
      moaindex a2= bavirt: eavirt
      moaindex a3= bavirt: eavirt
      moaindex a4= bavirt: eavirt
#
      moaindex j = baocc: eaocc
      moaindex j1= baocc: eaocc
      moaindex j2= baocc: eaocc
      moaindex j3= baocc: eaocc
      moaindex j4= baocc: eaocc
#
      moaindex b = bavirt: eavirt
      moaindex b1= bavirt: eavirt
      moaindex b2= bavirt: eavirt
      moaindex b3= bavirt: eavirt
      moaindex b4= bavirt: eavirt
#
      moaindex p = baocc: eavirt
      moaindex p1= baocc: eavirt
      moaindex p2= baocc: eavirt
      moaindex p3= baocc: eavirt
#
      moaindex q = baocc: eavirt
      moaindex q1= baocc: eavirt
      moaindex q2= baocc: eavirt
      moaindex q3= baocc: eavirt
# 
# Declare static arrays 
# --------------------- 

      static ca[mu,p]
      static fock_a[p,p1]
#
      distributed t1a_old[a,i] 
      distributed t1a_new[a,i] 
#
      distributed Fae_a[a,a1] 
      distributed Fae_b[b,b1] 
      distributed Fme_a[i,a] 
      distributed Fmi_a[i,i1] 
      distributed Fmi_b[j,j1] 
#
      distributed Gae_a[a,a1] 
      distributed Gmi_a[i,i1] 
      distributed Ibb[b,b1] 
      distributed Ijj[j,j1] 
#
# 'NEW' distributed arrays used in the W1EAFM procedures 
# ------------------------------------------------------ 
#
      distributed DSaaai[a,a1,a2,i] 
      distributed Daabj[a,a1,b,j] 
      distributed D1eafm_aa[a1,a,a2,i] 
      distributed D2eafm_aa[a2,a,a1,i] 
      distributed D1eafm_ab[a1,a,b,j] 
      distributed D3eafm_ab[a1,a,b1,j]
      distributed Dbbai[b,b1,a,i]
#
# Arrays used in transformation for AO2 algorithm
# -----------------------------------------------
#
      temp Txixi[mu,i1,lambda,i]
      temp Txxii[mu,nu,i1,i]
      temp Tixxi[i1,nu,lambda,i]
      temp Txipi[mu,i,p,i1]
      temp Tpipi[p1,i,p,i1]
      temp T1pipi[p1,i,p,i1]
      temp Tixai[i,mu,a,i1]
      temp Txaii[mu,a,i,i1]
      temp Tiaai[i,a1,a,i1]
      temp Taaii[a,a1,i,i1]
      temp Txaai[mu,a1,a,i]
      temp Taaai[a2,a,a1,i]
      temp Txxai[mu,nu,a,i]
#
      served VSpipi[p1,i,p,i1]
      served Viaai[i,a1,a,i1]
      served Vaaii[a,a1,i,i1]
      served VSaaai[a2,a,a1,i]
#
      temp Txjxj[mu,j1,lambda,j]
      temp Txxjj[mu,nu,j1,j]
      temp Tjjxx[j1,nu,lambda,j]
      temp Tjxxj[j1,nu,lambda,j]
      temp Txjqj[mu,j,q,j1]
      temp Tqjqj[q1,j,q,j1]
      temp T1qjqj[q1,j,q,j1]
      temp Tjxbj[j,mu,b,j1]
      temp Txbjj[mu,b,j,j1]
      temp Tjbbj[j,b1,b,j1]
      temp Tbbjj[b,b1,j,j1]
      temp Txbbj[mu,b1,b,j]
      temp Tbbbj[b2,b,b1,j]
      temp Txxbj[mu,nu,b,j]
#
      temp Txixj[mu,i,nu,j]
      temp Txiqj[mu,i,q,j]
      temp Tpiqj[p,i,q,j]
      temp Tiixx[i,i1,mu,nu]
      temp Tiixb[i,i1,mu,b]
      temp Tiibb[i,i1,b1,b]
      temp Txajj[mu,a,j,j1]
      temp Taajj[a,a1,j,j1]
      temp Txabj[mu,a,b,j]
      temp Tixxj[i,mu,nu,j]
      temp Tixbj[i,mu,b,j]
      temp Tiabj[i,a,b,j]
      temp Taabj[a,a1,b,j]
#
      served Vpiqj[p,i,q,j]
      served Vaabj[a,a1,b,j]
#
      temp Txbii[mu,b,i,i1]
      temp Tbbii[b,b1,i,i1]
      temp Tjbii[j,b,i,i1]
      temp Txbai[mu,b,a,i]
      temp Tbbai[b,b1,a,i]
#
# End Arrays used in transformation for AO2 algorithm
# --------------------------------------------------- 
#
# Declare temporary arrays 
# ------------------------ 
#
      temp Txxxi[mu,nu,lambda,i]
      temp Txxxj[mu,nu,lambda,j]
      temp Txiix[mu,i,i1,nu]
      temp Txjjx[mu,j,j1,nu]
      temp Txijx[mu,i,j,nu]
      temp Txpii[mu,p,i,i1]
      temp Txqii[mu,q,i,i1]
      temp Tppii[p,p1,i,i1]
      temp Tqqii[q,q1,i,i1]
      temp Txpjj[mu,p,j,j1]
      temp Txqjj[mu,q,j,j1]
      temp Tppjj[p,p1,j,j1]
      temp Tqqjj[q,q1,j,j1]
      temp Tixpi[i,mu,p,i1]
      temp Tippi[i,p,p1,i1]
      temp Tjxqj[j,mu,q,j1]
      temp Tjqqj[j,q,q1,j1]
      temp Tixqj[i,mu,q,j]
      temp Tipqj[i,p,q,j]
#
      temp Vblock[i,i1,i2,i3]
      temp Taiai[p,i,p1,i1]
      temp T1aiai[p,i,p1,i1]
      temp T2aiai[p,i,p1,i1]
      temp T3aiai[p,i,p1,i1]
#
      temp  Tiaia[i,a,i1,a1]
      temp T1iaia[i,a,i1,a1]
      temp T2iaia[i,a,i1,a1]
      temp T3iaia[i,a,i1,a1]
      temp T4iaia[i,a,i1,a1]
      temp TXiaia[i,a,i1,a1]
      temp  Tjbjb[j,b,j1,b1]
      temp T1jbjb[j,b,j1,b1]
      temp T2jbjb[j,b,j1,b1]
      temp T3jbjb[j,b,j1,b1]
      temp T4jbjb[j,b,j1,b1]
      temp TXjbjb[j,b,j1,b1]
      temp  Tiajb[i,a,j,b]
      temp T1iajb[i,a,j,b]
      temp T2iajb[i,a,j,b]
      temp T3iajb[i,a,j,b]
      temp T4iajb[i,a,j,b]
# 
      temp Tbjbj[q,j,q1,j1]
      temp T1bjbj[q,j,q1,j1]
      temp T2bjbj[q,j,q1,j1]
      temp T3bjbj[q,j,q1,j1]
      temp Taibj[p,i,q,j]
      temp T1aibj[p,i,q,j]
#
      temp Txxxp[mu,nu,lambda,p]
      temp Txxxq[mu,nu,lambda,q]
      temp Txxpp[mu,nu,p1,p]
      temp Txxqq[mu,nu,q1,q]
      temp Txppp[mu,p2,p1,p]
      temp Txqqq[mu,q2,q1,q]
      temp Txpqq[mu,p,q1,q]
      temp Tpppp[p3,p2,p1,p]
      temp T1pppp[p3,p2,p1,p]
      temp T2pppp[p3,p2,p1,p]
      temp TSpppp[p3,p2,p1,p]
      temp Tqqqq[q3,q2,q1,q]
      temp T1qqqq[q3,q2,q1,q]
      temp T2qqqq[q3,q2,q1,q]
      temp TSqqqq[q3,q2,q1,q]
      temp Tppqq[p1,p,q1,q]
      temp T1ppqq[p1,p,q1,q]
      temp Tqqpp[q1,q,p1,p]
      temp T1qqpp[q1,q,p1,p]
      temp Tixxx[i,mu,nu,sigma]
      temp Tipxx[i,p,nu,sigma]
      temp Tipqx[i,p,q,sigma]
      temp Tipqq[i,p,q,q1]
      temp tpqqp[p1,q,q1,p] 
      temp tqppq[q1,p,p1,q] 
#
      temp tmp1_aiai[a,i,a1,i1] 
      temp tmp2_aiai[a,i,a1,i1] 
      temp tmp3_aiai[a,i,a1,i1] 
      temp tmp1_bjbj[b,j,b1,j1] 
      temp tmp2_bjbj[b,j,b1,j1] 
      temp tmp3_bjbj[b,j,b1,j1] 
      temp tmp1_aibj[a,i,b,j] 
      temp tmp2_aibj[a,i,b,j] 
#
      temp Tai[a,i] 
      temp T1ai[a,i] 
      temp Tbj[b,j] 
      temp T1bj[b,j] 
#
      temp Taa[a,a1] 
      temp T1aa[a,a1] 
      temp T2aa[a,a1] 
      temp Tbb[b,b1] 
      temp T1bb[b,b1] 
      temp Tae_a[a,a1] 
      temp Tae_b[b,b1] 
#
      temp Tia[i,a] 
      temp T1ia[i,a] 
      temp T2ia[i,a] 
      temp T3ia[i,a] 
      temp T4ia[i,a] 
      temp Tjb[j,b] 
      temp T1jb[j,b] 
      temp T2jb[j,b] 
      temp T3jb[j,b] 
      temp T4jb[j,b] 
      temp Tme_a[i,a] 
      temp Tme_b[j,b] 
#
      temp Tii[i,i1] 
      temp T1ii[i,i1] 
      temp T2ii[i,i1] 
      temp Tjj[j,j1] 
      temp T1jj[j,j1] 
      temp Tmi_a[i,i1] 
      temp Tmi_b[j,j1] 
#
      temp Taiii[a,i,i1,i2] 
      temp T1aiii[a,i,i1,i2] 
#
      temp  Tiiii[i,i1,i2,i3] 
      temp T1iiii[i,i1,i2,i3] 
      temp T2iiii[i,i1,i2,i3] 
      temp TXiiii[i,i1,i2,i3] 
#
      temp  Tjjjj[j,j1,j2,j3] 
      temp T1jjjj[j,j1,j2,j3] 
      temp T2jjjj[j,j1,j2,j3] 
      temp  Tbjjj[b,j,j1,j2] 
      temp T1bjjj[b,j,j1,j2] 
#
      temp  Tiijj[i,i1,j2,j3] 
      temp T1iijj[i,i1,j2,j3] 
#
      temp  tmp_aa[a,a1] 
      temp tmp1_aa[a,a1] 
      temp  tmp_ii[i,i1] 
      temp tmp1_ii[i,i1] 
#
      temp  Tiiai[i,i1,a,i2] 
      temp T1iiai[i,i1,a,i2] 
      temp T2iiai[i,i1,a,i2] 
      temp T3iiai[i,i1,a,i2] 
      temp T4iiai[i,i1,a,i2] 
      temp TSiiai[i,i1,a,i2] 
#
      temp  tmp_bb[b,b1] 
      temp tmp1_bb[b,b1] 
      temp  tmp_jj[j,j1] 
      temp tmp1_jj[j,j1] 
#
      temp  Tjjbj[j,j1,b,j2] 
      temp T1jjbj[j,j1,b,j2] 
      temp T2jjbj[j,j1,b,j2] 
      temp T3jjbj[j,j1,b,j2] 
      temp T4jjbj[j,j1,b,j2] 
      temp TSjjbj[j,j1,b,j2] 
# 
      temp T1aaai[a,a1,a2,i]  
      temp T2aaai[a,a1,a2,i]  
      temp Taaaa[a,a1,a2,a3]  
      temp T1aaaa[a,a1,a2,a3]  
#
      temp T1bbbj[b,b1,b2,j]  
      temp T2bbbj[b,b1,b2,j]  
      temp Tbbbb[b,b1,b2,b3]  
      temp T1bbbb[b,b1,b2,b3]  
#
      temp Taabb[a,a1,b,b1]  
      temp T1aabb[a,a1,b,b1]  
#
      temp R1aiai[a,i,a1,i1] 
      temp R2aiai[a,i,a1,i1] 
      temp R3aiai[a,i,a1,i1] 
      temp R4aiai[a,i,a1,i1] 
      temp R1bjbj[b,j,b1,j1] 
      temp R2bjbj[b,j,b1,j1] 
      temp R3bjbj[b,j,b1,j1] 
      temp R4bjbj[b,j,b1,j1] 
      temp R1aibj[a,i,b,j] 
      temp R2aibj[a,i,b,j] 
      temp R3aibj[a,i,b,j] 
      temp R4aibj[a,i,b,j] 
#
      temp T1iaai[i,a,a1,i1] 
      temp T2iaai[i,a,a1,i1] 
      temp T1jbbj[j,b,b1,j1] 
      temp T2jbbj[j,b,b1,j1] 
      temp T1iabj[i,a,b,j] 
      temp T2iabj[i,a,b,j] 
      temp Tjjpp[j,j1,p,p1] 
      temp T1jjpp[j,j1,p,p1] 
      temp T2jjpp[j,j1,p,p1] 
      temp  Tiiqq[i,i1,q,q1] 
      temp T1iiqq[i,i1,q,q1] 
      temp T2iiqq[i,i1,q,q1] 
      temp  Tjjai[j,j1,a,i] 
      temp T1jjai[j,j1,a,i] 
      temp T2jjai[j,j1,a,i] 
      temp  Tiibj[i,i1,b,j] 
      temp T1iibj[i,i1,b,j] 
      temp T2iibj[i,i1,b,j] 
      temp  Tjbai[j,b,a,i]  
      temp T1jbai[j,b,a,i]  
      temp T2jbai[j,b,a,i]  
      temp  Taijj[a,i,j,j1] 
      temp T1aijj[a,i,j,j1] 
      temp Tqqip[a,i,b,b1]  
#
      temp T1iibb[i,i1,b,b1] 
      temp  Tjjaa[j,j1,a,a1] 
      temp T1jjaa[j,j1,a,a1] 
      temp  Tjjii[j,j1,i,i1] 
#
      temp Taibb[a,i,b,b1]
      temp T1aibb[a,i,b,b1]
      temp Tbjaa[b,j,a,a1]
      temp T1bjaa[b,j,a,a1]
      temp T1jbii[j,b,i,i1]
      temp Tiajj[i,a,j,j1]
      temp T1iajj[i,a,j,j1]
      temp  Taiaa[a1,i,a2,a] 
      temp T1aiaa[a1,i,a2,a] 
      temp  Tbjbb[b1,j,b2,b] 
      temp T1bjbb[b1,j,b2,b] 
      temp Tjibi[j,i,b,i1] 
      temp Tbiba[b,i,b1,a] 
      temp Tjiba[j,i,b,a] 
#
# Declare distributed arrays 
# -------------------------- 
#
      served T2new_aa[a,i,a1,i1]
      served T2new_ab[a,i,b,j]
      served T2old_aa[a,i,a1,i1]
      served T2old_ab[a,i,b,j]
      served Tau_aa[a,i,a1,i1]
      served Tau_ab[a,i,b,j]
      served Taup_aa[a,i,a1,i1]
      served Taup_ab[a,i,b,j]
#
# Declare served arrays 
# --------------------- 
#
      temp   DAOINT[mu,nu]
      temp Txx[mu,nu]
      temp Txx1[mu,nu]
      temp T1xx[mu,nu]
      temp Tpq[p,q]
      static Dipole[ixyz]
      static NucDip[ixyz]
      static Dip02[ixyz]
      served Dxx_scf[mu,nu]
      scalar rank
      scalar dsum
      scalar AbsDip
      temp AOINT[mu,nu,lambda,sigma] 
      static pinf[kiter,kptr1]
      temp tpinf[kiter,kptr1]
      scalar diis_start
      scalar diis_order
      int Idiis_order
      scalar lambda_2_pseudo
      scalar lambda_pseudo
      scalar one
      scalar two
      scalar five
      scalar six
      scalar seven
      scalar eight  
      scalar nine  
      scalar ten  
      scalar ncount1
      scalar ncount2
#
# ---------------------------------------
#
      temp TXaiai[a,i,nu,i1]
      temp TYaiai[a,i,a1,i1]
      temp TXbjbj[b,j,nu,j1]
      temp TYbjbj[b,j,b1,j1]
      temp TXaibj[a,i,nu,j]
      temp TYaibj[a,i,b,j]
#
      distributed F1me_a[i,a]
      distributed F1me_b[j,b]
#
      distributed F1ae_a[a,a1]
#
      distributed F1mi_a[i,i1]
#
      distributed W1minj_aa[i,i1,i2,i3]
      distributed W1minj_ab[i,i1,j,j1]
#
      served W2mebj_aa[i,a,a1,i1]
      served W2mebj_ab[i,a,b,j]
      served W2mjbe_ab[i,i1,b,b1]
      served W2mjbe_ba[j,j1,a,a1]
#
      served W1mebj_aa[i,a,a1,i1]
      served W1mebj_ab[i,a,b,j]
      served W1mjbe_ab[i,i1,b,b1]
#
      served W1imen_aa[i,i1,a,i2]
      served W1imen_ab[i,i1,b,j]
#
      served W1eafm_aa[a,a1,a2,i]
      served W1eafm_ab[a1,a,b,j]
#
      distributed l1a_old[i,a] 
      distributed l1a_new[i,a] 
#
      served L2old_aa[i,a,i1,a1] 
      served L2new_aa[i,a,i1,a1] 
      served L2old_ab[i,a,j,b] 
      served L2new_ab[i,a,j,b] 
#
# Procedure specific arrays used used: 
# ------------------------------------ 
#
# Local arrays: 
# ------------- 
#
      local ZAA[i,mu,i1,a1] 
      local ZAB[i,mu,j,b] 
#
      local L1aiai[a,i,a2,i1]
      local L1aibj[a1,i,b,j]
      local L2aiai[a2,i1,a,i2]
      local L3aibj[a,i1,b,j]
      local L3aiai[a1,i1,a2,i]
      local L5aibj[a1,i,b,j]
      local L4aiai[a,i1,a1,i2]
      local L7aibj[a,i1,b,j]
      local Liaia[i1,a,i2,a1]
      local Liajb[i1,a,j,b]
#
      local LLaa[i1,a1,i,a2] 
      local LLab[i,a1,j,b] 
#
      distributed Xiiia[i,i1,i2,a] 
      distributed Xiiii[i,i1,i2,i3] 
      distributed Xiajj[i,a,j,j1] 
      distributed Xiibj[i,i1,b,j] 
      distributed Xjbii[j,b,i,i1] 
      distributed Xjjai[j,j1,a,i] 
      distributed Xiijj[i,i1,j,j1]  
      distributed Xjjii[j,j1,i,i1]  
#
      temp Tbbaa[b,b1,a,a1] 
      temp Tjbaa[j,b1,a2,a3] 
      temp Tjbbb[j,b1,b2,b3] 
      temp Tiabb[i,a1,b2,b3] 
      temp Tiaaa[i,a1,a2,a3] 
      temp Tiijb[i,i1,j,b] 
      temp Tixia[i,mu,i1,a1] 
      temp Tixjb[i,mu,j,b] 
      temp Tjxjb[j,mu,j1,b] 
      temp Tixix[i,mu,i1,nu] 
      temp T1ixix[i,mu,i1,nu] 
      temp Tixjx[i,mu,j,nu] 
      temp Tjxjx[j,mu,j1,nu] 
      temp Yaa[i,mu,i1,nu] 
      temp Yab[i,mu,j,nu] 
      temp Y1ab[i,mu,j,nu] 
      temp Ybb[j,mu,j1,nu] 
      temp Tiaix[i,a,i1,nu]  
      temp Tiajx[i,a,j1,nu]  
      temp Tjbjx[j,b,j1,nu]  
      temp Tiiia[i,i2,i1,a]
      temp Tjjjb[j,j2,j1,b]
      temp Ljbjb[j,b,j1,b1]  
      temp Tbjai[b,j,a,i] 
      temp T1bjai[b,j,a,i] 
      temp Tjbia[j,b,i,a] 
      temp Tjbix[j,b,i,mu] 
      temp Tijaj[i,j,a,j1] 
      temp T1ijaj[i,j,a,j1] 
      temp Tijib[i,j,i1,b]  
      temp Tajab[a,j,a1,b] 
      temp Tijab[i,j,a,b] 
      temp T1ijab[i,j,a,b] 
      temp Tibab[i,b,a,b1] 
      temp Tjija[j,i,j1,a] 
      temp Tjaba[j,a,b,a1] 
#
# Distributed arrays 
# ------------------ 
# 
      served Z2AB[i,mu,j1,nu] 
      served Z2AA[i,mu,j1,nu] 
      served L2AO_ab[i,mu,j1,nu] 
      served L2AO_aa[i,mu,j1,nu] 
      distributed Iiiia[i,i1,i2,a2] 
      distributed Iiiii[i,i1,i2,i3] 
      distributed Iiijb[i,i1,j,b] 
      distributed Iiajj[i,a,j,j1] 
      distributed Iiijj[i,i1,j,j1] 
#
# Declare scalars 
# --------------- 
#
      scalar etemp
      scalar etemp1 
      scalar esum
      scalar esuma
      scalar esumb
      scalar esumab
      scalar ecorraa
      scalar ecorrbb
      scalar ecorrab
      scalar ecorrT
      scalar ecrit 
      scalar eold 
      scalar ediff 
      scalar mp2_energy
#
# Arrays/Scalars used exclusively in DIIS procedure. 
# -------------------------------------------------- 
      served Diajb[i,a,j,b,kdiis]
      served Diaia[i,a,i1,a1,kdiis]
      served Eiajb[i,a,j,b,jdiis]
      served Eiaia[i,a,i1,a1,jdiis]
      distributed Dia[i,a,kdiis]
      distributed Eia[i,a,jdiis]
      served D0iajb[i,a,j,b]
      served D0iaia[i,a,i1,a1]
      served D0ia[i,a]
      temp TB1iajb[i,a,j,b,jdiis]
      temp TB2iajb[i,a,j,b,jdiis]

      static BB[d1,d2]
      temp TDbb[d1,d2]
      temp TD1bb[d1,d2]
      distributed DIST_BB[d1,d2]
      scalar n1
      scalar n2
      scalar worder
      scalar jcount
      scalar kcount
      scalar niter
      int Iorder
#
#    ------------------------------------------------------------------------
#     1-RDM arrays
      distributed Dab_a[a,a1]
      distributed Dij_a[i,i1]
      distributed Dai_a[a,i]
      distributed Dia_a[i,a]
      served G1_a[p,p1]
      served G1ao_a[mu,nu]
      local LG1_a[p,mu]
      temp Tpx[p,nu]
      temp Tpp[p,p1]
      temp T1pp[p,p1]
      static SG1_a[p,q]
      static CC_occ[p]
      static temp1[p,q]
      static temp2[p,q]
      distributed LTef[a,a1]
      distributed LTmn[i,i1]
#
#    ------------------------------------------------------------------------
#
     PROC READ_2EL
#
#    ------------------------------------------------------------------------
#
      server_barrier
      restore_persistent ca        "ca"
      restore_persistent Fock_a    "fock_a"
      restore_persistent VSpipi    "VSpipi"
      restore_persistent Vaaii     "Vaaii"
      restore_persistent Viaai     "Viaai"
      restore_persistent VSaaai    "VSaaai"
      restore_persistent Vaabj     "Vaaai"
      restore_persistent Vpiqj     "Vpiqj"
      restore_persistent t1a_old   "t1a_old"
      restore_persistent T2old_aa  "T2old_aa"
      restore_persistent T2old_ab  "T2old_ab"
#      restore_persistent VSpipi   "VSpipi"
#      restore_persistent VSaaai   "VSaaai"
#      restore_persistent Vaaii    "Vaaii"
#      restore_persistent Viaai    "Viaai"
#      restore_persistent Vaabj    "Vaabj"
#      restore_persistent Vpiqj    "Vpiqj"
#      restore_persistent T2old_aa "T2old_aa"
#      restore_persistent T2old_ab "T2old_ab"
      server_barrier
##
#      PARDO a, a1, a2, i
#            REQUEST             Vaabj[a,a1,a2,i] 
#            REQUEST             Vaabj[a2,a1,a,i] 
#            tpppp[a,a1,a2,i]  = Vaabj[a2,a1,a,i]
#            tpppp[a,a1,a2,i] *= -1.0
#            tpppp[a,a1,a2,i] +=  Vaabj[a,a1,a2,i]
#            PREPARE VSaaai[a,a1,a2,i] = tpppp[a,a1,a2,i]
#      ENDPARDO a, a1, a2, i

      server_barrier
#
#    ------------------------------------------------------------------------
#
     ENDPROC READ_2EL
#
#    ------------------------------------------------------------------------
# 
      PROC TAUAA 
#     ----------
#
      PARDO a, i, a1, i1
#
            REQUEST T2old_aa[a,i,a1,i1] 
            GET t1a_old[a1,i1]
            GET t1a_old[a1,i]
            GET t1a_old[a,i1]
            GET t1a_old[a,i]
#
            tai[a1,i1]                 = t1a_old[a1,i1]
            tmp1_aiai[a,i,a1,i1]       = t1a_old[a,i]^tai[a1,i1]
            tai[a1,i]                  = t1a_old[a1,i]
            tmp2_aiai[a,i,a1,i1]       = t1a_old[a,i1]^tai[a1,i]
            tmp1_aiai[a,i,a1,i1]      -= tmp2_aiai[a,i,a1,i1]
#
            tmp3_aiai[a,i,a1,i1]       = tmp1_aiai[a,i,a1,i1]
            tmp3_aiai[a,i,a1,i1]      += T2old_aa[a,i,a1,i1]
            PREPARE Tau_aa[a,i,a1,i1]  = tmp3_aiai[a,i,a1,i1]
#
            tmp1_aiai[a,i,a1,i1]      *= 0.5
            tmp1_aiai[a,i,a1,i1]      += T2old_aa[a,i,a1,i1]
            PREPARE Taup_aa[a,i,a1,i1] = tmp1_aiai[a,i,a1,i1]
#
      ENDPARDO a, i, a1, i1
#
      ENDPROC TAUAA
#     -------------
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
      PROC TAUAB
#     ----------
#
      PARDO a, i, b, j
#
            REQUEST T2old_ab[a,i,b,j] 
            GET t1a_old[a,i]
            GET t1a_old[b,j]
            tai[b,j] = t1a_old[b,j]
#
            tmp1_aibj[a,i,b,j]       = t1a_old[a,i]^tai[b,j]
            tmp2_aibj[a,i,b,j]       = tmp1_aibj[a,i,b,j]
            tmp2_aibj[a,i,b,j]      *= 0.5
#
            tmp1_aibj[a,i,b,j]      += T2old_ab[a,i,b,j]
            tmp2_aibj[a,i,b,j]      += T2old_ab[a,i,b,j]
            PREPARE Tau_ab[a,i,b,j]  = tmp1_aibj[a,i,b,j]
            PREPARE Taup_ab[a,i,b,j] = tmp2_aibj[a,i,b,j]
#
      ENDPARDO a, i, b, j
#
      ENDPROC TAUAB
#     -------------
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
      PROC TAU
#     -------- 
#
           CALL TAUAA
           CALL TAUAB
#
      ENDPROC TAU
#     ----------- 
#
# ---------------------------------------------------------------------------- 
#
# ---------------------------------------------------------------------------- 
#
      PROC F1AEA
#     ----------
#
#     Local arrays used:
#     ------------------ 
#     local L1aiai(a,i,a2,i1) 
#     local L1aibj(a1,i,b,j) 
#
      PARDO a, a1 # VFL  
#
            Tae_a[a,a1] = 0.0
#
            DO i 
#
               GET t1a_old[a,i] 
               GET Fme_a[i,a1] 
#
               Taa[a,a1]    = t1a_old[a,i]*Fme_a[i,a1]  
               Taa[a,a1]   *= 0.5  
               Tae_a[a,a1] -=  Taa[a,a1]  
#
               DO a2 
#
                  REQUEST VSaaai[a1,a,a2,i]   
                  GET t1a_old[a2,i] 
#
                  Taa[a,a1]    = VSaaai[a1,a,a2,i]*t1a_old[a2,i]  
                  Tae_a[a,a1] +=  Taa[a,a1]  
#
#                 Initialize W1eafm_aa Intermediate. 
#                 ---------------------------------- 
                  PREPARE W1eafm_aa[a1,a,a2,i] = VSaaai[a1,a,a2,i]
#
               ENDDO a2 
#
            ENDDO i 
#
            DO j 
            DO b 
#
               REQUEST Vaabj[a1,a,b,j]   
               GET t1a_old[b,j] 
#
               Taa[a,a1]    = Vaabj[a1,a,b,j]*t1a_old[b,j] 
               Tae_a[a,a1] +=  Taa[a,a1]  
#
#              Initialize the W1eafm_ab intermediate. 
#              -------------------------------------- 
               PREPARE W1eafm_ab[a1,a,b,j] = Vaabj[a1,a,b,j] 
#
            ENDDO b 
            ENDDO j 
#
            PUT F1ae_a[a,a1] += Tae_a[a,a1] 
#
      ENDPARDO a, a1 
#
      PARDO i, i1, a2  
#
            allocate L1aiai[*,i,a2,i1] 
#
            DO a 
#
               REQUEST Taup_aa[a,i,a2,i1] 
               L1aiai[a,i,a2,i1] = Taup_aa[a,i,a2,i1] 
#
            ENDDO a 
#
            DO a1 
#
               REQUEST VSpipi[a1,i1,a2,i]  
#
               DO a 
#
                  Taa[a,a1]         = L1aiai[a,i,a2,i1]*VSpipi[a1,i1,a2,i] 
                  Taa[a,a1]        *= 0.5 
                  PUT F1ae_a[a,a1] +=  Taa[a,a1]  
#
               ENDDO a 
#
            ENDDO a1 
#
            deallocate L1aiai[*,i,a2,i1] 
#
      ENDPARDO i, i1, a2  
#
      PARDO i, j, b 
#
            allocate L1aibj[*,i,b,j] 
#
            DO a1 
#
               REQUEST Vpiqj[a1,i,b,j]   
               L1aibj[a1,i,b,j] = Vpiqj[a1,i,b,j] 
#
            ENDDO a1 
#
            DO a 
#
               REQUEST Taup_ab[a,i,b,j]   
#
               DO a1   
#
                  Taa[a,a1]         = Taup_ab[a,i,b,j]*L1aibj[a1,i,b,j] 
                  Taa[a,a1]        *= -1.0  
                  PUT F1ae_a[a,a1] += Taa[a,a1] 
#
               ENDDO a1  
#
            ENDDO a  
#
            deallocate L1aibj[*,i,b,j] 
#
      ENDPARDO i, j, b  
#
      ENDPROC F1AEA
#     -------------
#
# ---------------------------------------------------------------------------- 
#
# ---------------------------------------------------------------------------- 
#
      PROC F1AE
#     --------
         CALL F1AEA 
      ENDPROC F1AE
#     ------------ 
#
# ---------------------------------------------------------------------------- 
#
# ---------------------------------------------------------------------------- 
#
      PROC FMEA
#     ----------
#
      PARDO i, a, i1, a1  
#
            REQUEST VSpipi[a,i,a1,i1]   
            GET t1a_old[a1,i1] 
#
            Tia[i,a]        = VSpipi[a,i,a1,i1]*t1a_old[a1,i1] 
            PUT Fme_a[i,a] += Tia[i,a] 
#
      ENDPARDO i, a, i1, a1  
#
      PARDO i, a, j, b  
#
            REQUEST Vpiqj[a,i,b,j]   
            GET t1a_old[b,j] 
#
            Tia[i,a]        = Vpiqj[a,i,b,j]*t1a_old[b,j] 
            PUT Fme_a[i,a] += Tia[i,a] 
#
      ENDPARDO i, a, j, b  
# 
      ENDPROC FMEA
#     -------------
#
# ---------------------------------------------------------------------------- 
#
# ---------------------------------------------------------------------------- 
#
      PROC FME
#     ----------
         CALL FMEA
      ENDPROC FME
#     ----------- 
#
# ---------------------------------------------------------------------------- 
#
# ---------------------------------------------------------------------------- 
#
      PROC F1MIA
#     ----------
#
#     Local arrays used:
#     ------------------ 
#     local L2aiai(a2,i1,a,i2) 
#     local L3aibj(a,i1,b,j) 
#
      PARDO i1, i, a    
#
            GET t1a_old[a,i] 
            GET Fme_a[i1,a] 
#
            Tii[i1,i]         = Fme_a[i1,a]*t1a_old[a,i] 
            Tii[i1,i]        *= 0.5 
            PUT F1mi_a[i1,i] += Tii[i1,i] 
#
            DO i2 
#
               REQUEST VSpipi[a,i2,i,i1]   
               GET t1a_old[a,i2] 
#
               Tii[i1,i]         = VSpipi[a,i2,i,i1]*t1a_old[a,i2] 
               PUT F1mi_a[i1,i] += Tii[i1,i] 
#
            ENDDO i2 
#
      ENDPARDO i1, i, a  
#
      PARDO a, a2, i2  
#
            allocate L2aiai[a2,*,a,i2] 
#
            DO i1 
#
               REQUEST              VSpipi[a2,i1,a,i2]  
               L2aiai[a2,i1,a,i2] = VSpipi[a2,i1,a,i2] 
#
            ENDDO i1 
#
            DO i 
#
               REQUEST Taup_aa[a2,i,a,i2]   
#
               DO i1  
#
                  Tii[i1,i]         = L2aiai[a2,i1,a,i2]*Taup_aa[a2,i,a,i2] 
                  Tii[i1,i]        *= 0.5 
                  PUT F1mi_a[i1,i] += Tii[i1,i] 
#
               ENDDO i1  
#
            ENDDO i 
#
            deallocate L2aiai[a2,*,a,i2] 
#
      ENDPARDO a, a2, i2  
#
      PARDO i1, i, j, b  
#
            REQUEST Vpiqj[i,i1,b,j]  
            GET     t1a_old[b,j] 
#
            Tii[i1,i]         = Vpiqj[i,i1,b,j]*t1a_old[b,j] 
            PUT F1mi_a[i1,i] += Tii[i1,i] 
#
      ENDPARDO i1, i, j, b  
# 
      PARDO a, b, j   
#
            allocate L3aibj[a,*,b,j] 
#
            DO i1 
# 
               REQUEST            Vpiqj[a,i1,b,j]    
               L3aibj[a,i1,b,j] = Vpiqj[a,i1,b,j] 
#
            ENDDO i1 
#
            DO i 
#
               REQUEST Taup_ab[a,i,b,j]  
#
               DO i1 
#
                  Tii[i1,i]         = Taup_ab[a,i,b,j]*L3aibj[a,i1,b,j] 
                  PUT F1mi_a[i1,i] += Tii[i1,i] 
#
               ENDDO i1 
#
            ENDDO i 
#
            deallocate L3aibj[a,*,b,j] 
#
      ENDPARDO a, b, j  
# 
      ENDPROC F1MIA
#     -------------
#
# ---------------------------------------------------------------------------- 
#
# ---------------------------------------------------------------------------- 
#
      PROC F1MI 
#     ----------
         CALL F1MIA 
      ENDPROC F1MI 
#     ------------ 
#
# ---------------------------------------------------------------------------- 
#
# ---------------------------------------------------------------------------- 
#
      PROC GAEA
#     --------- 
#
#     local arrays used:
#     ------------------ 
#     local L3aiai(a1,i1,a2,i) 
#     local L5aibj(a1,i,b,j) 
#
      PARDO i, i1, a2 # VFL  
#
            allocate L3aiai[*,i1,a2,i]  
#
            DO a1  
#
               REQUEST              T2old_aa[a1,i1,a2,i]   
               L3aiai[a1,i1,a2,i] = T2old_aa[a1,i1,a2,i]   
#
            ENDDO a1  
#
            DO a  
#
               REQUEST L2old_aa[i1,a,i,a2]    
#
               DO a1  
#
                  T1aa[a,a1]       = L2old_aa[i1,a,i,a2]*L3aiai[a1,i1,a2,i]  
                  T1aa[a,a1]      *= -0.5 
                  PUT Gae_a[a,a1] += T1aa[a,a1] 
#
               ENDDO a1  
#
            ENDDO a  
#
            deallocate L3aiai[*,i1,a2,i]  
#
      ENDPARDO i, i1, a2     
#
      PARDO i, j, b # VFL  
#
            allocate L5aibj[*,i,b,j]  
#
            DO a1 
#
               REQUEST            T2old_ab[a1,i,b,j]  
               L5aibj[a1,i,b,j] = T2old_ab[a1,i,b,j] 
#
            ENDDO a1 
#
            DO a 
#
               REQUEST L2old_ab[i,a,j,b]  
#
               DO a1  
#
                  Taa[a,a1]        = L2old_ab[i,a,j,b]*L5aibj[a1,i,b,j]  
                  Taa[a,a1]       *= -1.0  
                  PUT Gae_a[a,a1] += Taa[a,a1] 
#
               ENDDO a1  
#
            ENDDO a 
# 
            deallocate L5aibj[*,i,b,j]  
#
      ENDPARDO i, j, b    
#
      ENDPROC GAEA
#     ------------ 
#
# ---------------------------------------------------------------------------- 
#
# ---------------------------------------------------------------------------- 
#
      PROC GAE 
#     -------- 
         CALL GAEA 
      ENDPROC GAE 
#     ----------- 
#
# ---------------------------------------------------------------------------- 
#
# ---------------------------------------------------------------------------- 
#
      PROC GMIA 
#     --------- 
#
#     local arrays used: 
#     ------------------ 
#     local L4aiai(a,i1,a1,i2) 
#     local L7aibj(a,i1,b,j) 
#
      PARDO i1, i 
#
            Gmi_a[i1,i] = 0.0 
#
      ENDPARDO i1, i 
      server_barrier
#
      PARDO a, a1, i2  
#
            allocate L4aiai[a,*,a1,i2] 
#
            DO i1 
#
               REQUEST T2old_aa[a,i1,a1,i2]  
               L4aiai[a,i1,a1,i2] = T2old_aa[a,i1,a1,i2] 
#
            ENDDO i1 
#
            DO i 
#
               REQUEST L2old_aa[i,a,i2,a1]   
#
               DO i1  
#
                  Tii[i1,i]        = L4aiai[a,i1,a1,i2]*L2old_aa[i,a,i2,a1]   
                  Tii[i1,i]       *= 0.5  
                  PUT Gmi_a[i1,i] += Tii[i1,i] 
#               
               ENDDO i1  
#
            ENDDO i 
#
            deallocate L4aiai[a,*,a1,i2] 
#
      ENDPARDO a, a1, i2  
#
      PARDO a, b, j  
#
            allocate L7aibj[a,*,b,j] 
#
            DO i1 
#
               REQUEST            T2old_ab[a,i1,b,j]   
               L7aibj[a,i1,b,j] = T2old_ab[a,i1,b,j]  
#
            ENDDO i1 
#
            DO i 
#
               REQUEST L2old_ab[i,a,j,b]   
#
               DO i1 
#
                  Tii[i1,i]        = L7aibj[a,i1,b,j]*L2old_ab[i,a,j,b]   
                  PUT Gmi_a[i1,i] += Tii[i1,i] 
#               
               ENDDO i1 
#
            ENDDO i 
#
            deallocate L7aibj[a,*,b,j] 
#
      ENDPARDO a, b, j  
#
      ENDPROC GMIA 
#     ------------ 
#
      PROC GMI 
#     -------- 
         CALL GMIA 
      ENDPROC GMI 
#     ----------- 
#
# ----------------------------------------------------------------------------------  
#
# ----------------------------------------------------------------------------------  
# 
      PROC W1minjAA 
#     ------------- 
#
      PARDO i2, i, i3, i1 
#
            REQUEST                      VSpipi[i2,i,i3,i1]   
            Tiiii[i2,i,i3,i1]          = VSpipi[i2,i,i3,i1]  
            PUT W1minj_aa[i2,i,i3,i1] += Tiiii[i2,i,i3,i1] 
#
      ENDPARDO i2, i, i3, i1 
#
      PARDO i2, i, i3, i1 
#
            Tiiii[i2,i,i3,i1] = 0.0 
#
            DO a 
#
               REQUEST               VSpipi[a,i3,i,i2]    
               GET                   t1a_old[a,i1] 
               T1iiii[i2,i,i3,i1]  = VSpipi[a,i3,i,i2]*t1a_old[a,i1] 
               Tiiii[i2,i,i3,i1]  += T1iiii[i2,i,i3,i1] 
#
            ENDDO a 
#
            PUT W1minj_aa[i2,i,i3,i1] += Tiiii[i2,i,i3,i1] 
#
      ENDPARDO i2, i, i3, i1 
#
      PARDO i2, i, i3, i1 
#
            Tiiii[i2,i,i3,i1] = 0.0 
#
            DO a 
#
               REQUEST               VSpipi[a,i3,i1,i2]   
               GET                   t1a_old[a,i]
               T2iiii[i2,i,i3,i1]  = VSpipi[a,i3,i1,i2]*t1a_old[a,i] 
               Tiiii[i2,i,i3,i1]  -= T2iiii[i2,i,i3,i1] 
#
            ENDDO a 
#
            PUT W1minj_aa[i2,i,i3,i1] += Tiiii[i2,i,i3,i1] 
#
      ENDPARDO i2, i, i3, i1 
#
      PARDO i, i1, a, a1 
#
            REQUEST Tau_aa[a,i,a1,i1]  
#
            DO i2  
            DO i3  
#
               REQUEST                      VSpipi[a,i2,a1,i3]  
               Tiiii[i2,i,i3,i1]          = VSpipi[a,i2,a1,i3]*Tau_aa[a,i,a1,i1]
               Tiiii[i2,i,i3,i1]         *= 0.5
               PUT W1minj_aa[i2,i,i3,i1] += Tiiii[i2,i,i3,i1] 
#
            ENDDO i3  
            ENDDO i2  
#
      ENDPARDO i, i1, a, a1 
#
      ENDPROC W1minjAA 
#     ---------------- 
#
# ----------------------------------------------------------------------------------  
#
# ----------------------------------------------------------------------------------  
# 
      PROC W1minjAB 
#     ------------- 
#
      PARDO i, i1, j, j1 
#
            REQUEST                     Vpiqj[i1,i,j1,j]   
            Tiijj[i1,i,j1,j]          = Vpiqj[i1,i,j1,j] 
            PUT W1minj_ab[i1,i,j1,j] += Tiijj[i1,i,j1,j]  
#
      ENDPARDO i, i1, j, j1 
#
      PARDO j, i, i1, j1 
#
            Tiijj[i1,i,j1,j] = 0.0  
#
            DO b  
#
               REQUEST             Vpiqj[i,i1,b,j1]   
               GET                 t1a_old[b,j] 
               T1iijj[i1,i,j1,j] = Vpiqj[i,i1,b,j1]*t1a_old[b,j] 
               Tiijj[i1,i,j1,j] += T1iijj[i1,i,j1,j] 
#
            ENDDO b   
#
            PUT W1minj_ab[i1,i,j1,j] += Tiijj[i1,i,j1,j]  
#
      ENDPARDO j, i, i1, j1 
#
      PARDO i, i1, j, j1 
#
            Tiijj[i1,i,j1,j] = 0.0  
#
            DO a 
#
               REQUEST             Vpiqj[a,i1,j,j1]   
               GET                 t1a_old[a,i] 
               T1iijj[i1,i,j1,j] = Vpiqj[a,i1,j,j1]*t1a_old[a,i] 
               Tiijj[i1,i,j1,j] += T1iijj[i1,i,j1,j] 
#
            ENDDO a 
#
            PUT W1minj_ab[i1,i,j1,j] += Tiijj[i1,i,j1,j]  
#
      ENDPARDO i, i1, j, j1 
#
      PARDO i, j, a, b  
#
            REQUEST Tau_ab[a,i,b,j]  
#
            DO i1  
            DO j1  
#
               REQUEST                     Vpiqj[a,i1,b,j1]   
               Tiijj[i1,i,j1,j]          = Tau_ab[a,i,b,j]*Vpiqj[a,i1,b,j1] 
               PUT W1minj_ab[i1,i,j1,j] += Tiijj[i1,i,j1,j]  
#
            ENDDO j1  
            ENDDO i1  
#
      ENDPARDO i, j, a, b  
#
      ENDPROC W1minjAB 
#     ---------------- 
#
# ----------------------------------------------------------------------------------  
#
# ----------------------------------------------------------------------------------  
# 
      PROC W1MINJ 
#     ----------- 
#
           create W1minj_aa
           create W1minj_ab
           server_barrier 
#
           CALL W1minjAA 
           CALL W1minjAB 
#
      ENDPROC W1MINJ 
#     -------------- 
#
# ----------------------------------------------------------------------------------  
#
# ----------------------------------------------------------------------------------  
# 
# In the procedures W1MEBJAA, W1MEBJBB, W1MEBJAB, and W1MEBJBA these  
# intermediates are formed as temporary arrarys. The contribution to the 
# outout arrays is computed directly from these temporary arrays so 
# that the array is never stored.   
#
# ----------------------------------------------------------------------------------  
#
      PROC W1MEBJAA_S  
#     ---------------
#
      PARDO i, a, i1, a1  
#
            REQUEST             Viaai[i1,a1,a,i]  
            REQUEST             Vaaii[a,a1,i1,i]   
#
            Tiaai[i1,a1,a,i]  = Vaaii[a,a1,i1,i] 
            Tiaai[i1,a1,a,i] -= Viaai[i1,a1,a,i] 
            Tiaai[i1,a1,a,i] *= -1.0 
#
            DO i2  
#
               REQUEST              VSpipi[a1,i1,i,i2]   
               GET                  t1a_old[a,i2] 
#
               T1iaai[i1,a1,a,i]  = VSpipi[a1,i1,i,i2]*t1a_old[a,i2]  
               Tiaai[i1,a1,a,i]  -= T1iaai[i1,a1,a,i]  
#
            ENDDO i2  
#
            DO a2  
#
               REQUEST VSaaai[a2,a,a1,i1]   
               GET t1a_old[a2,i] 
#
               T1iaai[i1,a1,a,i]  = VSaaai[a2,a,a1,i1]*t1a_old[a2,i] 
               Tiaai[i1,a1,a,i]  += T1iaai[i1,a1,a,i]  
#
               DO i2 
#
                  REQUEST VSpipi[a2,i2,a1,i1]   
                  REQUEST T2old_aa[a2,i,a,i2]   
                  GET t1a_old[a,i2] 
#
                  Taiai[a1,i2,a2,i1]  = VSpipi[a2,i2,a1,i1] 
                  tai[a,i2]           = t1a_old[a,i2] 
                  T1aiai[a2,i,a,i2]   = t1a_old[a2,i]^tai[a,i2] 
                  T1aiai[a2,i,a,i2]  += T2old_aa[a2,i,a,i2] 
                  T1iaai[i1,a1,a,i]   = T1aiai[a2,i,a,i2]*Taiai[a1,i2,a2,i1] 
                  Tiaai[i1,a1,a,i]   -= T1iaai[i1,a1,a,i]  
#
               ENDDO i2  
#
            ENDDO a2  
#
            DO b
            DO j
#
               REQUEST Vpiqj[a1,i1,b,j]  
               REQUEST T2old_ab[a,i,b,j]  
#
               T1iaai[i1,a1,a,i]  = Vpiqj[a1,i1,b,j]*T2old_ab[a,i,b,j]
               Tiaai[i1,a1,a,i]  += T1iaai[i1,a1,a,i]
#
            ENDDO j
            ENDDO b
#
            PREPARE W1MEBJ_AA[i1,a1,a,i] = Tiaai[i1,a1,a,i]  
# 
      ENDPARDO i, a, i1, a1  
#
      ENDPROC W1MEBJAA_S  
#     ------------------
#
      PROC W1MEBJAA 
#     ----------------
# 
      PARDO i1, a1, a, i 
#
            REQUEST            W1MEBJ_AA[i1,a1,a,i]  
            GET                l1a_old[i,a]
            tiaia[i1,a1,i,a] = W1MEBJ_AA[i1,a1,a,i] 
#
# Compute contributions to L2new_ab 
# --------------------------------- 
#
            DO j
            DO b
#
               REQUEST                        L2old_ab[i,a,j,b]  
               T1iajb[i1,a1,j,b]            = tiaia[i1,a1,i,a]*L2old_ab[i,a,j,b]
               Tiajb[j,b,i1,a1]             = T1iajb[i1,a1,j,b]   
#
               PREPARE L2new_ab[i1,a1,j,b] += T1iajb[i1,a1,j,b]
               PREPARE L2new_ab[j,b,i1,a1] += Tiajb[j,b,i1,a1]
#
            ENDDO b
            ENDDO j
#
# Compute contribution to L1a_new  
# ------------------------------- 
#
            Tia[i1,a1]          = tiaia[i1,a1,i,a]*l1a_old[i,a]
            PUT l1a_new[i1,a1] += Tia[i1,a1]
#
      ENDPARDO i1, a1, a, i 
#
      ENDPROC W1MEBJAA 
#     ----------------
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
      PROC W1MEBJAB_S 
#     ---------------
#
      PARDO j, i, a, b 
#
            REQUEST          Viaai[i,a,b,j]   
            Tiabj[i,a,b,j] = Viaai[i,a,b,j] 
#
            DO b1 
#
               REQUEST Vaabj[b1,b,a,i]   
               GET t1a_old[b1,j] 
#
               T1iabj[i,a,b,j] = Vaabj[b1,b,a,i]*t1a_old[b1,j] 
               Tiabj[i,a,b,j] += T1iabj[i,a,b,j] 
#
            ENDDO b1 
#
            DO j1 
#
               REQUEST Vpiqj[a,i,j,j1]   
               GET t1a_old[b,j1] 
#
               T1iabj[i,a,b,j] = Vpiqj[a,i,j,j1]*t1a_old[b,j1] 
               Tiabj[i,a,b,j] -= T1iabj[i,a,b,j] 
#
               DO b1 
#
                  REQUEST t2old_aa[b1,j,b,j1]  
                  REQUEST Vpiqj[a,i,b1,j1]      
                  GET t1a_old[b1,j] 
# 
                  tbj[b,j1]          = t1a_old[b,j1] 
                  T2bjbj[b1,j,b,j1]  = t1a_old[b1,j]^tbj[b,j1] 
                  T2bjbj[b1,j,b,j1] += T2old_aa[b1,j,b,j1] 
                  T1iabj[i,a,b,j]    = T2bjbj[b1,j,b,j1]*Vpiqj[a,i,b1,j1] 
                  Tiabj[i,a,b,j]    -= T1iabj[i,a,b,j] 
#
               ENDDO b1 
#
            ENDDO j1 
#
            DO a1
            DO i1
#
               REQUEST T2old_ab[a1,i1,b,j]   
               REQUEST VSpipi[a1,i1,a,i]    
#
               T1iabj[i,a,b,j] = T2old_ab[a1,i1,b,j]*VSpipi[a1,i1,a,i]
               Tiabj[i,a,b,j] += T1iabj[i,a,b,j]
#
            ENDDO i1
            ENDDO a1
#
            PREPARE W1MEBJ_AB[i,a,b,j] = Tiabj[i,a,b,j]  
#
      ENDPARDO j, i, a, b 
#
      ENDPROC W1MEBJAB_S  
#     ------------------
#
#
      PROC W1MEBJAB 
#     ----------------
#
      PARDO i, a, b, j 
#
            REQUEST          W1MEBJ_AB[i,a,b,j]  
            GET              l1a_old[j,b]
            tiaia[i,a,j,b] = W1MEBJ_AB[i,a,b,j] 
#
# Compute contributions to L2new_ab 
# --------------------------------- 
#
            DO j1
            DO b1
#
               REQUEST                        L2old_aa[j,b,j1,b1]  
               T1iajb[i,a,j1,b1]            = tiaia[i,a,j,b]*L2old_aa[j,b,j1,b1]
               Tiajb[j1,b1,i,a]             = T1iajb[i,a,j1,b1]  
#
               PREPARE L2new_ab[i,a,j1,b1] += T1iajb[i,a,j1,b1]
               PREPARE L2new_ab[j1,b1,i,a] += Tiajb[j1,b1,i,a]
#
            ENDDO b1
            ENDDO j1
#
# Compute contribution to l1a_new 
# ------------------------------- 
#
            T1ia[i,a]         = tiaia[i,a,j,b]*l1a_old[j,b]
            PUT l1a_new[i,a] += T1ia[i,a] 
#
      ENDPARDO i, a, b, j 
#
      ENDPROC W1MEBJAB 
#     ----------------
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
# PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP 
#
# Compute contributions from 'Wmjbe'. This needs to be checked 
#
      PROC W1MJBEab_S 
#     ---------------
#
      PARDO i, i1, b1, b 
#
            REQUEST            Vaaii[b,b1,i1,i]   
            Tiiqq[i1,i,b,b1] = Vaaii[b,b1,i1,i] 
#
            DO a1 
#
               REQUEST Vaabj[b1,b,a1,i1]  
               GET t1a_old[a1,i] 
#
               T1iiqq[i1,i,b,b1] = Vaabj[b1,b,a1,i1]*t1a_old[a1,i]
               Tiiqq[i1,i,b,b1] += T1iiqq[i1,i,b,b1] 
#
            ENDDO a1  
#
            DO j1 
#
               REQUEST Vpiqj[i,i1,b1,j1]   
               GET t1a_old[b,j1] 
               tai[b,j1] = t1a_old[b,j1] 
# 
               T1iiqq[i1,i,b,b1] = Vpiqj[i,i1,b1,j1]*t1a_old[b,j1] 
               Tiiqq[i1,i,b,b1] -= T1iiqq[i1,i,b,b1] 
#
               DO a1 
#
                  REQUEST T2old_ab[a1,i,b,j1]   
                  REQUEST Vpiqj[a1,i1,b1,j1]    
                  GET t1a_old[a1,i] 
#
                  Taibj[a1,i,b,j1]   = t1a_old[a1,i]^tai[b,j1] 
                  T1aibj[a1,i,b,j1]  = T2old_ab[a1,i,b,j1]  
                  T1aibj[a1,i,b,j1] += Taibj[a1,i,b,j1]  
                  T1iiqq[i1,i,b,b1]  = T1aibj[a1,i,b,j1]*Vpiqj[a1,i1,b1,j1] 
                  Tiiqq[i1,i,b,b1]  -= T1iiqq[i1,i,b,b1] 
#
               ENDDO a1 
#
            ENDDO j1 
#
            Tiiqq[i1,i,b,b1]            *= -1.0 
            PREPARE W1mjbe_ab[i1,i,b,b1] = Tiiqq[i1,i,b,b1] 
#
      ENDPARDO i, i1, b1, b 
#
      ENDPROC W1MJBEab_S 
#     --------------------
#
      PROC W1MJBEab
#     -------------
#
      PARDO i1, b1, b, i 
#
            REQUEST W1mjbe_ab[i1,i,b,b1]  
#
# Compute the contribution to L2new_ab 
# ------------------------------------ 
#
            DO j 
            DO a
#
               REQUEST                        L2old_ab[i,a,j,b]  
               T1iajb[i1,a,j,b1]            = W1mjbe_ab[i1,i,b,b1]*L2old_ab[i,a,j,b]
               Tiajb[j,b1,i1,a]             = T1iajb[i1,a,j,b1] 
#
               PREPARE L2new_ab[i1,a,j,b1] += T1iajb[i1,a,j,b1] # VFL
               PREPARE L2new_ab[j,b1,i1,a] += Tiajb[j,b1,i1,a] # VFL
#
            ENDDO a
            ENDDO j
#
      ENDPARDO i1, b1, b, i 
#
      ENDPROC W1MJBEab
#     ---------------
#
# ------------------------------------------------------------------------------------  
#
      PROC W1MEBJ_S  
# 
           CALL W1MEBJAA_S 
           CALL W1MEBJAB_S 
           CALL W1MJBEab_S 
#
      ENDPROC W1MEBJ_S  
#
# ------------------------------------------------------------------------------------  
#
# ------------------------------------------------------------------------------------  
#
      PROC W1MEBJ 
# 
           CALL W1MEBJAA
           CALL W1MEBJAB
           CALL W1MJBEab
#
      ENDPROC W1MEBJ 
#
# ------------------------------------------------------------------------------------  
#
# ------------------------------------------------------------------------------------  
#
      PROC W2MEBJAA 
#     ------------- 
#
# First the 'bare' terms put into the arrays to initialize them. 
# -------------------------------------------------------------- 
#
      PARDO i1, a1, a, i 
#
            REQUEST                        Viaai[i1,a1,a,i]  # +  
            REQUEST                        Vaaii[a,a1,i1,i]  # - 
            Tiaai[i1,a1,a,i]             = Vaaii[a,a1,i1,i]  
            Tiaai[i1,a1,a,i]            -= Viaai[i1,a1,a,i]  
            Tiaai[i1,a1,a,i]            *= -1.0  
            PREPARE W2mebj_aa[i1,a1,a,i] = Tiaai[i1,a1,a,i] 
#
      ENDPARDO i1, a1, a, i 
#
      PARDO i, a, b, j 
#
            REQUEST                      Viaai[i,a,b,j]   
            Tiabj[i,a,b,j]             = Viaai[i,a,b,j] 
            PREPARE W2mebj_ab[i,a,b,j] = Tiabj[i,a,b,j]  
#
      ENDPARDO i, a, b, j 
#
      PARDO i, i1, b, b1 
#
            REQUEST                        Vaaii[b,b1,i,i1]   
            Tiibb[i,i1,b,b1]             = Vaaii[b,b1,i,i1] 
            Tiibb[i,i1,b,b1]            *= -1.0 
            PREPARE W2mjbe_ab[i,i1,b,b1] = Tiibb[i,i1,b,b1] 
#
      ENDPARDO i, i1, b, b1 
#
      PARDO j1, j, a, a1 
#
            REQUEST                        Vaaii[a,a1,j1,j]   
            Tjjaa[j1,j,a,a1]             = Vaaii[a,a1,j1,j] 
            Tjjaa[j1,j,a,a1]            *= -1.0 
            PREPARE W2mjbe_ba[j1,j,a,a1] = Tjjaa[j1,j,a,a1] 
#
      ENDPARDO j1, j, a, a1 
#
      server_barrier 
#
# Done initializing intermediates to the 'bare' terms. 
# ---------------------------------------------------- 
#
      PARDO i, a, a2, i2 
#
            REQUEST T2old_aa[a,i2,a2,i]   
#
            DO i1 
            DO a1 
#
               REQUEST                         VSpipi[a1,i1,a2,i2]  # + 
               Tiaai[i1,a1,a,i]              = VSpipi[a1,i1,a2,i2]*T2old_aa[a,i2,a2,i] 
               Tiaai[i1,a1,a,i]             *= -1.0  
               PREPARE W2mebj_aa[i1,a1,a,i] += Tiaai[i1,a1,a,i] 
#
            ENDDO a1 
            ENDDO i1 
#
      ENDPARDO i, a, a2, i2 
#
      PARDO a, i, b, j  
#
            REQUEST T2old_ab[a,i,b,j]   
#
            DO i1 
            DO a1 
#
               REQUEST                         Vpiqj[a1,i1,b,j]  # + 
               Tiaai[i1,a1,a,i]              = Vpiqj[a1,i1,b,j]*T2old_ab[a,i,b,j] 
               PREPARE W2mebj_aa[i1,a1,a,i] += Tiaai[i1,a1,a,i] 
#
            ENDDO a1 
            ENDDO i1 
#
      ENDPARDO a, i, b, j  
#
      ENDPROC W2MEBJAA 
#     ---------------- 
#
      PROC W2MEBJAB 
#     ------------- 
#
      PARDO b, j, a1, i1  
#
            REQUEST T2old_ab[a1,i1,b,j]   
#
            DO a 
            DO i 
#
               REQUEST                       VSpipi[a,i,a1,i1]  # +  
               Tiabj[i,a,b,j]              = VSpipi[a,i,a1,i1]*T2old_ab[a1,i1,b,j] 
               PREPARE W2mebj_ab[i,a,b,j] += Tiabj[i,a,b,j]  
#
            ENDDO i 
            ENDDO a 
#
      ENDPARDO b, j, a1, i1  
#
      PARDO b, j, b1, j1  
#
            REQUEST T2old_aa[b1,j1,b,j]   
#
            DO a 
            DO i 
#
               REQUEST                       Vpiqj[a,i,b1,j1]     # +  
               Tiabj[i,a,b,j]              = Vpiqj[a,i,b1,j1]*T2old_aa[b1,j1,b,j] 
               PREPARE W2mebj_ab[i,a,b,j] += Tiabj[i,a,b,j]  
#
            ENDDO i 
            ENDDO a 
#
      ENDPARDO b, j, b1, j1  
#
      ENDPROC W2MEBJAB 
#     ---------------- 
#
      PROC W2MJBEAB
#     ------------- 
#
      PARDO b, i1, a, j  
#
            REQUEST T2old_ab[a,i1,b,j]   
#
            DO i  
            DO b1  
#
               REQUEST                         Vpiqj[a,i,b1,j]   
               Tiibb[i,i1,b,b1]              = T2old_ab[a,i1,b,j]*Vpiqj[a,i,b1,j] 
               PREPARE W2mjbe_ab[i,i1,b,b1] += Tiibb[i,i1,b,b1] 
#
            ENDDO b1 
            ENDDO i 
#
      ENDPARDO b, i1, a, j  
#
      ENDPROC W2MJBEAB
#     ---------------- 
#
      PROC W2MJBEBA
#     ------------- 
#
      PARDO a, i, b, j  
#
            REQUEST T2old_ab[a,i,b,j]   
#
            DO a1  
            DO j1  
#
               REQUEST                         Vpiqj[a1,i,b,j1]   
               Tjjaa[j1,j,a,a1]              = T2old_ab[a,i,b,j]*Vpiqj[a1,i,b,j1] 
               PREPARE W2mjbe_ba[j1,j,a,a1] += Tjjaa[j1,j,a,a1] 
#
            ENDDO j1 
            ENDDO a1  
#
      ENDPARDO a, i, b, j  
#
      ENDPROC W2MJBEBA
#     ---------------- 
#
# ------------------------------------------------------------------------------------- 
#
# ------------------------------------------------------------------------------------- 
#
      PROC W2MEBJ 
#     ----------- 
           CALL W2MEBJAA
           CALL W2MEBJAB
#
           CALL W2MJBEAB 
           CALL W2MJBEBA  
      ENDPROC W2MEBJ 
#     -------------- 
#
# ------------------------------------------------------------------------------------- 
#
# ------------------------------------------------------------------------------------- 
#
      PROC W1IMENAA 
#     ------------- 
#
      PARDO i, i1, a, i2 
#
            REQUEST             VSpipi[i,i1,a,i2]   
            Tiiai[i,i1,a,i2]  = VSpipi[i,i1,a,i2] 
            TSiiai[i,i2,a,i1] = 0.0  
#
            DO i3 
#
               GET W1minj_aa[i,i1,i3,i2]   
               GET t1a_old[a,i3] 
#   
               T1iiai[i,i1,a,i2] = W1minj_aa[i,i1,i3,i2]*t1a_old[a,i3] 
               Tiiai[i,i1,a,i2] -= T1iiai[i,i1,a,i2] 
#
            ENDDO i3 
#
            DO a1 
#
               REQUEST T2old_aa[a,i1,a1,i2]   
               REQUEST W2mebj_aa[i,a1,a,i2]   
               GET     Fme_a[i,a1] 
               GET     t1a_old[a1,i1] 
#
               T1iiai[i,i1,a,i2]  = T2old_aa[a,i1,a1,i2]*Fme_a[i,a1] 
               Tiiai[i,i1,a,i2]  -= T1iiai[i,i1,a,i2] 
#
               T1iiai[i,i1,a,i2]  = W2mebj_aa[i,a1,a,i2]*t1a_old[a1,i1]  
               T2iiai[i,i2,a,i1]  = T1iiai[i,i1,a,i2]  
#
               Tiiai[i,i1,a,i2]  += T1iiai[i,i1,a,i2] 
               TSiiai[i,i2,a,i1] -= T2iiai[i,i2,a,i1] 
#
               DO a2 
#
                  REQUEST Tau_aa[a1,i1,a2,i2]   
                  REQUEST VSaaai[a2,a,a1,i]    # + 
#
                  T1iiai[i,i1,a,i2]  = Tau_aa[a1,i1,a2,i2]*VSaaai[a2,a,a1,i]
                  T1iiai[i,i1,a,i2] *= 0.5  
                  Tiiai[i,i1,a,i2]  += T1iiai[i,i1,a,i2] 
#
               ENDDO a2 
#
               DO i3 
#
                  REQUEST T2old_aa[a,i2,a1,i3]   
                  REQUEST VSpipi[i1,i,a1,i3]    # + 
#
                  T1iiai[i,i1,a,i2]   = VSpipi[i1,i,a1,i3]*T2old_aa[a,i2,a1,i3] 
                  T2iiai[i,i2,a,i1]   = T1iiai[i,i1,a,i2] 
                  Tiiai[i,i1,a,i2]   += T1iiai[i,i1,a,i2] 
                  TSiiai[i,i2,a,i1]  -= T2iiai[i,i2,a,i1] 
#
               ENDDO i3 
#
            ENDDO a1 
#
            DO b 
            DO j 
#
               REQUEST T2old_ab[a,i2,b,j]   
               REQUEST Vpiqj[i1,i,b,j]     # + 
#
               T1iiai[i,i1,a,i2]  = Vpiqj[i1,i,b,j]*T2old_ab[a,i2,b,j] 
               Tiiai[i,i1,a,i2]  += T1iiai[i,i1,a,i2] 
#
               T2iiai[i,i2,a,i1]  = T1iiai[i,i1,a,i2] 
               TSiiai[i,i2,a,i1] -= T2iiai[i,i2,a,i1] 
#
            ENDDO j 
            ENDDO b 
#
            PREPARE W1imen_aa[i,i1,a,i2] += Tiiai[i,i1,a,i2] 
            PREPARE W1imen_aa[i,i2,a,i1] += TSiiai[i,i2,a,i1] 
#
      ENDPARDO i, i1, a, i2 
#
      ENDPROC W1IMENAA 
#     ---------------- 
#
      PROC W1IMENAB 
#     ------------- 
#
      PARDO i, i1, b, j 
#
            REQUEST Vpiqj[i,i1,b,j]   
            Tiibj[i,i1,b,j] = Vpiqj[i,i1,b,j]  
#
            DO a 
#
               REQUEST T2old_ab[a,i1,b,j]   
               REQUEST W2mebj_ab[i,a,b,j]   
               GET Fme_a[i,a] 
               GET t1a_old[a,i1] 
#
               T1iibj[i,i1,b,j] = T2old_ab[a,i1,b,j]*Fme_a[i,a] 
               Tiibj[i,i1,b,j] += T1iibj[i,i1,b,j] 
#
               T1iibj[i,i1,b,j] = W2mebj_ab[i,a,b,j]*t1a_old[a,i1] 
               Tiibj[i,i1,b,j] += T1iibj[i,i1,b,j] 
#
               DO b1 
#
                  REQUEST Tau_ab[a,i1,b1,j]   
                  REQUEST Vaabj[b1,b,a,i]     
#
                  T1iibj[i,i1,b,j] = Vaabj[b1,b,a,i]*Tau_ab[a,i1,b1,j] 
                  Tiibj[i,i1,b,j] += T1iibj[i,i1,b,j] 
#
               ENDDO b1 
#
               DO i2 
#
                  REQUEST T2old_ab[a,i2,b,j]   
                  REQUEST VSpipi[i1,i,a,i2]   # + 
#
                  T1iibj[i,i1,b,j] = VSpipi[i1,i,a,i2]*T2old_ab[a,i2,b,j]  
                  Tiibj[i,i1,b,j] += T1iibj[i,i1,b,j] 
#
               ENDDO i2 
#
               DO j1 
#
                  REQUEST T2old_ab[a,i1,b,j1]   
                  REQUEST Vpiqj[a,i,j,j1]      # + 
#
                  T1iibj[i,i1,b,j] = Vpiqj[a,i,j,j1]*T2old_ab[a,i1,b,j1]  
                  Tiibj[i,i1,b,j] -= T1iibj[i,i1,b,j] 
#
               ENDDO j1 
#
            ENDDO a 
#
            DO j1 
#
               GET W1minj_ab[i,i1,j1,j]   
               GET t1a_old[b,j1] 
#
               T1iibj[i,i1,b,j] = W1minj_ab[i,i1,j1,j]*t1a_old[b,j1]  
               Tiibj[i,i1,b,j] -= T1iibj[i,i1,b,j] 
#
            ENDDO j1 
#
            DO b1 
#
               REQUEST W2mjbe_ab[i,i1,b,b1]   
               GET t1a_old[b1,j] 
#
               T1iibj[i,i1,b,j] = W2mjbe_ab[i,i1,b,b1]*t1a_old[b1,j]  
               Tiibj[i,i1,b,j] -= T1iibj[i,i1,b,j] 
#
               DO j2 
#
                  REQUEST T2old_aa[b1,j2,b,j]   
                  REQUEST Vpiqj[i1,i,b1,j2]    # + 
#
                  T1iibj[i,i1,b,j] = Vpiqj[i1,i,b1,j2]*T2old_aa[b1,j2,b,j]  
                  Tiibj[i,i1,b,j] += T1iibj[i,i1,b,j] 
#
               ENDDO j2 
#
            ENDDO b1 
#
            PREPARE W1imen_ab[i,i1,b,j] = Tiibj[i,i1,b,j] 
#
      ENDPARDO i, i1, b, j 
#
      ENDPROC W1IMENAB 
#     ---------------- 
#
# ------------------------------------------------------------------------------------- 
#
# ------------------------------------------------------------------------------------- 
#
      PROC W1IMEN 
#     ----------- 
#
         CALL W1IMENAA
         CALL W1IMENAB 
#
      ENDPROC W1IMEN 
#     -------------- 
#
# ------------------------------------------------------------------------------------- 
#
# ------------------------------------------------------------------------------------- 
#
      PROC W1EAFMAA_S  
#     --------------- 
#
      PARDO a1, a, a2, i 
#
# Compute (a1,a,a1,i) and (a2,a,a1,i) block of intermediate 
# --------------------------------------------------------- 
#
            Tpppp[a1,a,a2,i]  = 0.0  
            TSpppp[a2,a,a1,i] = 0.0  
#
            DO i1 
#
               REQUEST              T2old_aa[a1,i,a2,i1]   
               REQUEST              W2mebj_aa[i1,a,a2,i]   
               GET                  Fme_a[i1,a] 
               GET                  t1a_old[a1,i1] 
#
               T1pppp[a1,a,a2,i]  = T2old_aa[a1,i,a2,i1]*Fme_a[i1,a]  
               Tpppp[a1,a,a2,i]  += T1pppp[a1,a,a2,i] 
#
               T1pppp[a1,a,a2,i]  = W2mebj_aa[i1,a,a2,i]*t1a_old[a1,i1]  
               T2pppp[a2,a,a1,i]  = T1pppp[a1,a,a2,i]  
# 
               Tpppp[a1,a,a2,i]  -= T1pppp[a1,a,a2,i] 
               TSpppp[a2,a,a1,i] += T2pppp[a2,a,a1,i] 
#
            ENDDO i1 
#
            PREPARE W1eafm_aa[a1,a,a2,i] +=  Tpppp[a1,a,a2,i] 
            PREPARE W1eafm_aa[a2,a,a1,i] += TSpppp[a2,a,a1,i] 
#
      ENDPARDO a1, a, a2, i 
#
      PARDO a1, a2, i1, i2  
#
            REQUEST Tau_aa[a1,i1,a2,i2]   
#
            DO a 
            DO i 
#
               REQUEST                         VSpipi[a,i1,i,i2]    # +  
               T1pppp[a1,a,a2,i]             = Tau_aa[a1,i1,a2,i2]*VSpipi[a,i1,i,i2]  
               T1pppp[a1,a,a2,i]            *= 0.5  
               PREPARE W1eafm_aa[a1,a,a2,i] +=  T1pppp[a1,a,a2,i] 
#
            ENDDO i 
            ENDDO a 
#
      ENDPARDO a1, a2, i1, i2  
#
      DO a 
      DO a1 
         server_barrier 
         PARDO a3, i2 
               REQUEST                  VSaaai[a,a1,a3,i2]  
               PUT DSaaai[a,a1,a3,i2] = VSaaai[a,a1,a3,i2] 
         ENDPARDO a3, i2 
         server_barrier 
#
         PARDO a2, i, a3, i2  
               REQUEST                     T2old_aa[a3,i2,a2,i]  
               GET                         DSaaai[a,a1,a3,i2] 
               T1pppp[a1,a,a2,i]         = DSaaai[a,a1,a3,i2]*T2old_aa[a3,i2,a2,i] 
               PUT D1eafm_aa[a1,a,a2,i] += T1pppp[a1,a,a2,i] 
#
               T2pppp[a2,a,a1,i]         = T1pppp[a1,a,a2,i]  
               T2pppp[a2,a,a1,i]        *= -1.0  
               PUT D2eafm_aa[a2,a,a1,i] += T2pppp[a2,a,a1,i] 
         ENDPARDO a2, i, a3, i2  
#
         PARDO b, j, a3, i2  
               REQUEST                    T2old_ab[a3,i2,b,j]  
               GET                        DSaaai[a,a1,a3,i2] 
               Tppqq[a1,a,b,j]          = DSaaai[a,a1,a3,i2]*T2old_ab[a3,i2,b,j] 
               PUT D1eafm_ab[a1,a,b,j] += Tppqq[a1,a,b,j]
         ENDPARDO b, j, a3, i2  
         server_barrier 
#
         PARDO a2, i 
               GET                             D1eafm_aa[a1,a,a2,i] 
               GET                             D2eafm_aa[a2,a,a1,i] 
               PREPARE W1eafm_aa[a1,a,a2,i] += D1eafm_aa[a1,a,a2,i]
               PREPARE W1eafm_aa[a2,a,a1,i] += D2eafm_aa[a2,a,a1,i]  
         ENDPARDO a2, i 
#
         PARDO b, j 
               GET                            D1eafm_ab[a1,a,b,j] 
               PREPARE W1eafm_ab[a1,a,b,j] += D1eafm_ab[a1,a,b,j]  
         ENDPARDO b, j 
         server_barrier 
#
         delete DSaaai
         delete D1eafm_aa
         delete D2eafm_aa
         delete D1eafm_ab
#
      ENDDO a1 
      ENDDO a 
#
      DO a1  
      DO a  
         server_barrier 
         PARDO b, j 
               REQUEST               Vaabj[a,a1,b,j]  
               PUT Daabj[a,a1,b,j] = Vaabj[a,a1,b,j] 
         ENDPARDO b, j 
         server_barrier 
#
         PARDO a2, i, b, j 
               REQUEST                     T2old_ab[a2,i,b,j]  
               GET                         Daabj[a,a1,b,j] 
               Tpppp[a1,a,a2,i]          = Daabj[a,a1,b,j]*T2old_ab[a2,i,b,j]
               Tpppp[a1,a,a2,i]         *= 2.0  
               PUT D1eafm_aa[a1,a,a2,i] +=  Tpppp[a1,a,a2,i] 
         ENDPARDO a2, i, b, j 
#
         PARDO b1, j1, b, j  
               REQUEST                      T2old_aa[b1,j1,b,j]  
               GET                          Daabj[a,a1,b,j] 
               Tppqq[a1,a,b1,j1]          = Daabj[a,a1,b,j]*T2old_aa[b1,j1,b,j]
               PUT D1eafm_ab[a1,a,b1,j1] += Tppqq[a1,a,b1,j1] 
         ENDPARDO b1, j1, b, j  
         server_barrier 
#
         PARDO a2, i 
               GET                             D1eafm_aa[a1,a,a2,i] 
               PREPARE W1eafm_aa[a1,a,a2,i] += D1eafm_aa[a1,a,a2,i] 
         ENDPARDO a2, i 
#
         PARDO b1, j1  
               GET                              D1eafm_ab[a1,a,b1,j1] 
               PREPARE W1eafm_ab[a1,a,b1,j1] += D1eafm_ab[a1,a,b1,j1]  
         ENDPARDO b1, j1  
         server_barrier 
#
         delete Daabj
         delete D1eafm_aa
         delete D1eafm_ab
#
      ENDDO a  
      ENDDO a1  
#
      ENDPROC W1EAFMAA_S  
#     --------------- 
#
      PROC W1EAFMAA  
#     ------------- 
#
# Done contributions involving integrals with three virtuals.
# -----------------------------------------------------------
#
      PARDO i, a1, a2   
#
            allocate LLaa[*,a1,i,a2] 
#
            DO i1 
               REQUEST            L2old_aa[i1,a1,i,a2]   
               LLaa[i1,a1,i,a2] = L2old_aa[i1,a1,i,a2] 
            ENDDO i1 
#
            DO a 
#
               REQUEST            W1eafm_aa[a1,a,a2,i]   
               tpppp[a1,i,a2,a] = W1eafm_aa[a1,a,a2,i] 
#
# Compute contribution to l1a_new 
# ------------------------------- 
#
               DO i1 
#
                 #REQUEST              L2old_aa(i1,a1,i,a2) a2  
                  T1ia[i1,a]         = LLaa[i1,a1,i,a2]*tpppp[a1,i,a2,a]  
                  T1ia[i1,a]        *= 0.5
                  PUT l1a_new[i1,a] += T1ia[i1,a] 
#
            ENDDO i1 
#
            ENDDO a 
#
            deallocate LLaa[*,a1,i,a2] 
#
      ENDPARDO i, a1, a2 
#
# Done contributions involving integrals with three virtuals.
# -----------------------------------------------------------
#
      ENDPROC W1EAFMAA 
#     ---------------- 
#
      PROC W1EAFMAB_S 
#     --------------- 
#
# Compute (a1,a,b,j) block of intermediate 
# ---------------------------------------- 
#
      PARDO a, a1, j, b 
#
            Tppqq[a1,a,b,j] = 0.0 
#
            DO i 
#
               REQUEST            T2old_ab[a1,i,b,j]   
               REQUEST            W2mebj_ab[i,a,b,j]   
               GET                Fme_a[i,a] 
               GET                t1a_old[a1,i] 
#
               T1ppqq[a1,a,b,j] = T2old_ab[a1,i,b,j]*Fme_a[i,a]
               Tppqq[a1,a,b,j] -= T1ppqq[a1,a,b,j]
#
               T1ppqq[a1,a,b,j] = W2mebj_ab[i,a,b,j]*t1a_old[a1,i] 
               Tppqq[a1,a,b,j] -= T1ppqq[a1,a,b,j]
#
            ENDDO i 
#
            PREPARE W1eafm_ab[a1,a,b,j] += Tppqq[a1,a,b,j] 
#
      ENDPARDO a, a1, j, b 
#
      PARDO a, a1, j, j1  
#
            REQUEST W2mjbe_ba[j1,j,a1,a]   
#
            DO b 
#
               GET                            t1a_old[b,j1] 
               Tppqq[a1,a,b,j]              = W2mjbe_ba[j1,j,a1,a]*t1a_old[b,j1] 
               PREPARE W1eafm_ab[a1,a,b,j] += Tppqq[a1,a,b,j] 
#
            ENDDO b 
#
      ENDPARDO a, a1, j, j1 
#
      PARDO a1, b, j1, i 
#
            REQUEST Tau_ab[a1,i,b,j1]   
#
            DO a 
            DO j 
#   
               REQUEST                        Vpiqj[a,i,j,j1]   
               Tppqq[a1,a,b,j]              = Tau_ab[a1,i,b,j1]*Vpiqj[a,i,j,j1] 
               PREPARE W1eafm_ab[a1,a,b,j] += Tppqq[a1,a,b,j] 
#
            ENDDO j 
            ENDDO a 
#
      ENDPARDO a1, b, j1, i 
#
      ENDPROC W1EAFMAB_S 
#     ------------------ 
#
      PROC W1EAFMAB 
#     ------------- 
#
# Compute contribution to l1a_new
# -------------------------------
#
      PARDO a1, j, b  
#
            allocate LLab[*,a1,j,b] 
#
            DO i
               REQUEST          L2old_ab[i,a1,j,b] 
               LLab[i,a1,j,b] = L2old_ab[i,a1,j,b] 
            ENDDO i
#
            DO a 
#
               REQUEST           W1eafm_ab[a1,a,b,j]   
               tpqqp[a1,j,b,a] = W1eafm_ab[a1,a,b,j] 
#
               DO i
#
                 #REQUEST             L2old_ab(i,a1,j,b) b
                  T1ia[i,a]         = LLab[i,a1,j,b]*tpqqp[a1,j,b,a]  
                  PUT l1a_new[i,a] += T1ia[i,a]
#
               ENDDO i
#
            ENDDO a 
#
            deallocate LLab[*,a1,j,b] 
#
      ENDPARDO a1, j, b 
#
# Done contributions involving integrals with three virtuals.
# -----------------------------------------------------------
#
      ENDPROC W1EAFMAB 
#     ---------------- 
#
      PROC W1EAFMBB_S  
#     --------------- 
#
      DO b1
      DO b
         server_barrier
         PARDO a, i
               REQUEST               Vaabj[b,b1,a,i] 
               PUT Dbbai[b,b1,a,i] = Vaabj[b,b1,a,i]
         ENDPARDO a, i
         server_barrier
#
         PARDO a1, j, a, i
#
               REQUEST                     T2old_ab[a1,i,b,j] 
               GET                         Dbbai[b,b1,a,i]
               Tppqq[a1,a,b1,j]          = T2old_ab[a1,i,b,j]*Dbbai[b,b1,a,i]
               Tppqq[a1,a,b1,j]         *= -1.0
               PUT D3eafm_ab[a1,a,b1,j] += Tppqq[a1,a,b1,j]
#
         ENDPARDO a1, j, a, i
         server_barrier
#
         delete Dbbai
#
      ENDDO b
#
         PARDO a, a1, j
               GET                             D3eafm_ab[a1,a,b1,j]
               PREPARE W1eafm_ab[a1,a,b1,j] += D3eafm_ab[a1,a,b1,j]
         ENDPARDO a, a1, j
         server_barrier
         delete D3eafm_ab
#
      ENDDO b1
#
      ENDPROC W1EAFMBB_S  
#     ------------------ 
#
      PROC W1EAFM_S  
#     -------------  
# 
         CALL W1EAFMAA_S 
         CALL W1EAFMAB_S 
         CALL W1EAFMBB_S 
#
      ENDPROC W1EAFM_S 
#     ---------------- 
#
      PROC W1EAFM 
#     -----------  
# 
         CALL W1EAFMAA
         CALL W1EAFMAB
#
      ENDPROC W1EAFM 
#     -------------- 
#
# -------------------------------------------------------------------------------------- 
#
# -------------------------------------------------------------------------------------- 
#
      PROC L1ANEW 
#     ----------- 
#
#     local arrays used: 
#     ------------------ 
#     local Liaia(i1,a,i2,a1) 
#     local Liajb(i1,a,j,b) 
# 
      PARDO a, i  
#
            GET                 Fme_a[i,a]
            Tia[i,a]          = Fme_a[i,a] 
            PUT l1a_new[i,a] += Tia[i,a]
#
      ENDPARDO a, i
# 
      PARDO i, a, a1  
#
            GET                 l1a_old[i,a1]
            GET                 F1ae_a[a1,a]
            Tia[i,a]          = l1a_old[i,a1]*F1ae_a[a1,a]
            PUT l1a_new[i,a] += Tia[i,a]
#
      ENDPARDO i, a, a1  
# 
      PARDO i, a, a1, a2  
#
            REQUEST             VSaaai[a2,a1,a,i] 
            GET                 Gae_a[a1,a2]
            Tia[i,a]          = VSaaai[a2,a1,a,i]*Gae_a[a1,a2]
            Tia[i,a]         *= -1.0  
            PUT l1a_new[i,a] += Tia[i,a]
#
      ENDPARDO i, a, a1, a2  
# 
      PARDO i, a, i1 
#
            GET                 l1a_old[i1,a]
            GET                 F1mi_a[i,i1]
            Tia[i,a]          = l1a_old[i1,a]*F1mi_a[i,i1]
            Tia[i,a]         *= -1.0  
            PUT l1a_new[i,a] += Tia[i,a]
#
      ENDPARDO i, a, i1  
# 
      PARDO a, i, i1, i2   
#
            REQUEST             VSpipi[a,i,i1,i2]   
            GET                 Gmi_a[i2,i1]
            Tia[i,a]          = VSpipi[a,i,i1,i2]*Gmi_a[i2,i1]
            Tia[i,a]         *= -1.0  
            PUT l1a_new[i,a] += Tia[i,a]
#
      ENDPARDO a, i, i1, i2 
# 
      PARDO a, i, j, j1   
#
            REQUEST             Vpiqj[a,i,j,j1]   
            GET                 Gmi_a[j1,j]
            Tia[i,a]          = Vpiqj[a,i,j,j1]*Gmi_a[j1,j]
            Tia[i,a]         *= -1.0  
            PUT l1a_new[i,a] += Tia[i,a]
#
      ENDPARDO a, i, j, j1 
# 
      PARDO a, i, b, b1  
#
            REQUEST             Vaabj[b1,b,a,i] 
            GET                 Gae_a[b,b1]
            Tia[i,a]          = Vaabj[b1,b,a,i]*Gae_a[b,b1]
            Tia[i,a]         *= -1.0  
            PUT l1a_new[i,a] += Tia[i,a]
#
      ENDPARDO a, i, b, b1 
#
      PARDO i1, a1, i2  
#
            allocate Liaia[i1,*,i2,a1] 
#
            DO a 
#
               REQUEST             L2old_aa[i1,a,i2,a1]  
               Liaia[i1,a,i2,a1] = L2old_aa[i1,a,i2,a1] 
#
            ENDDO a 
#
            DO i
#
               REQUEST W1imen_aa[i,i1,a1,i2]  
#
               DO a
#
                  Tia[i,a]          = W1imen_aa[i,i1,a1,i2]*Liaia[i1,a,i2,a1]
                  Tia[i,a]         *= -0.5
                  PUT l1a_new[i,a] += Tia[i,a]
#
               ENDDO a
#
            ENDDO i
#
            deallocate Liaia[i1,*,i2,a1] 
#
      ENDPARDO i1, a1, i2  
#
      PARDO j, b, i1  
#
            allocate Liajb[i1,*,j,b] 
#
            DO a 
#
               REQUEST           L2old_ab[i1,a,j,b]   
               Liajb[i1,a,j,b] = L2old_ab[i1,a,j,b] 
#
            ENDDO a 
#
            DO i
#
               REQUEST W1imen_ab[i,i1,b,j]  
#
               DO a
#
                  Tia[i,a]          = W1imen_ab[i,i1,b,j]*Liajb[i1,a,j,b] 
                  Tia[i,a]         *= -1.0
                  PUT l1a_new[i,a] += Tia[i,a]
#
               ENDDO a
#
            ENDDO i
#
            deallocate Liajb[i1,*,j,b] 
#
      ENDPARDO j, b, i1  
#
      PARDO a, i, a1, i1
#
            REQUEST             VSpipi[a,i,a1,i1]   
            Taiai[a,i,a1,i1]  = VSpipi[a,i,a1,i1]
#
            T2ia[i1,a1] = 0.0
#
            DO a2
#
               GET Gae_a[a2,a1]
               GET t1a_old[a2,i1]
#
               T3ia[i1,a1]  = Gae_a[a2,a1]*t1a_old[a2,i1]
               T2ia[i1,a1] += T3ia[i1,a1]
#
            ENDDO a2
#
            DO i2
#
               GET Gmi_a[i1,i2]
               GET t1a_old[a1,i2]
#
               T3ia[i1,a1]  = Gmi_a[i1,i2]*t1a_old[a1,i2]
               T2ia[i1,a1] -= T3ia[i1,a1]
#
            ENDDO i2
#
            Tia[i,a]          = Taiai[a,i,a1,i1]*T2ia[i1,a1]
            PUT l1a_new[i,a] += Tia[i,a]
#
      ENDPARDO a, i, a1, i1
#
      PARDO a, b, i, j
#
            REQUEST Vpiqj[a,i,b,j] 
#
            T2jb[j,b] = 0.0
#
            DO b1
#
               GET Gae_a[b1,b]
               GET t1a_old[b1,j]
#
               T3jb[j,b]  = Gae_a[b1,b]*t1a_old[b1,j]
               T2jb[j,b] += T3jb[j,b]
#
            ENDDO b1
#
            DO j1
#
               GET Gmi_a[j,j1]
               GET t1a_old[b,j1]
#
               T3jb[j,b]  = Gmi_a[j,j1]*t1a_old[b,j1]
               T2jb[j,b] -= T3jb[j,b]
#
            ENDDO j1
#
            Tia[i,a]          = Vpiqj[a,i,b,j]*T2jb[j,b]
            PUT l1a_new[i,a] += Tia[i,a]
#
      ENDPARDO a, b, i, j
#
      ENDPROC L1ANEW 
#     -------------- 
#
# ------------------------------------------------------------------------------------ 
#
# ------------------------------------------------------------------------------------ 
#
      PROC L2NEWAB 
#     ------------ 
#
      PARDO i, j, a, b  
#
            REQUEST            Vpiqj[a,i,b,j]  
            GET                l1a_old[i,a]
            GET                Fme_a[j,b]
            GET                l1a_old[j,b]
            GET                Fme_a[i,a]
#
            Tiajb[i,a,j,b]   = Vpiqj[a,i,b,j]
#
            T1iajb[i,a,j,b]  = l1a_old[i,a]^Fme_a[j,b]
            Tiajb[i,a,j,b]  += T1iajb[i,a,j,b]
#
            T1iajb[i,a,j,b]  = Fme_a[i,a]^l1a_old[j,b]
            Tiajb[i,a,j,b]  += T1iajb[i,a,j,b]
#
            DO i1 
            DO j1
#
               REQUEST           L2old_ab[i1,a,j1,b]   
               GET               W1minj_ab[i,i1,j,j1] 
#
               T1iajb[i,a,j,b] = L2old_ab[i1,a,j1,b]*W1minj_ab[i,i1,j,j1]
               Tiajb[i,a,j,b] += T1iajb[i,a,j,b] 
#
            ENDDO j1
            ENDDO i1
#
            PREPARE L2new_ab[i,a,j,b] += Tiajb[i,a,j,b]
#
      ENDPARDO i, j, a, b  
#
      PARDO a, i, b, b1  
#
            REQUEST           Vaabj[b,b1,a,i]  
            tpppp[i,a,b1,b] = Vaabj[b,b1,a,i] 
#
            DO j
#
               GET                          l1a_old[j,b1]
               Tiajb[i,a,j,b]             = tpppp[i,a,b1,b]*l1a_old[j,b1]
               PREPARE L2new_ab[i,a,j,b] += Tiajb[i,a,j,b]
#
               T1iajb[j,b,i,a]            = Tiajb[i,a,j,b] 
               PREPARE L2new_ab[j,b,i,a] += T1iajb[j,b,i,a]
#
            ENDDO j
#
      ENDPARDO a, i, b, b1 
#
      PARDO j, j1 
#
            GET         Gmi_a[j1,j]
            Tjj[j,j1] = Gmi_a[j1,j] 
#
            DO b1 
#
               GET          l1a_old[j,b1]
               GET          t1a_old[b1,j1]
               T1jj[j,j1] = l1a_old[j,b1]*t1a_old[b1,j1]
               Tjj[j,j1] += T1jj[j,j1]
#
            ENDDO b1
#
            PUT Ijj[j,j1] = Tjj[j,j1] 
#
      ENDPARDO j, j1 
#
      PARDO b, b1 
#
            GET         Gae_a[b,b1] 
            Tbb[b1,b] = Gae_a[b,b1] 
#
            DO j1   
#
               GET          l1a_old[j1,b]
               GET          t1a_old[b1,j1]
               T1bb[b1,b] = t1a_old[b1,j1]*l1a_old[j1,b]
               Tbb[b1,b] -= T1bb[b1,b]  
#
            ENDDO j1   
#
            PUT Ibb[b1,b] = Tbb[b1,b] 
#
      ENDPARDO b, b1   
      server_barrier 
#
      PARDO b, j, a, i  
#
            Tiajb[i,a,j,b] = 0.0  
            Taiai[a,i,b,j] = 0.0 
#
            DO b1
#
               REQUEST           L2old_ab[i,a,j,b1]  
               REQUEST           Vpiqj[a,i,b1,j]     
               GET               Ibb[b1,b]
               GET               F1ae_a[b1,b]
               GET               l1a_old[j,b1]
#
               T1iajb[i,a,j,b] = L2old_ab[i,a,j,b1]*F1ae_a[b1,b]
               Tiajb[i,a,j,b] += T1iajb[i,a,j,b]
#
               T1aiai[a,i,b,j] = Vpiqj[a,i,b1,j]*Ibb[b1,b]
               Taiai[a,i,b,j] += T1aiai[a,i,b,j]
#
            ENDDO b1
#
            T1iajb[i,a,j,b]            = Taiai[a,i,b,j] 
            Tiajb[i,a,j,b]            += T1iajb[i,a,j,b] 
            PREPARE L2new_ab[i,a,j,b] += Tiajb[i,a,j,b]
#
      ENDPARDO b, j, a, i  
#
#     PARDO a, a1, b, j 
#
#           REQUEST Vaabj(a,a1,b,j) j 
#
#           DO i
#
#              GET                          l1a_old(i,a1)
#              Tiajb(i,a,j,b)             = Vaabj(a,a1,b,j)*l1a_old(i,a1)
#              PREPARE L2new_ab(i,a,j,b) += Tiajb(i,a,j,b)
#
#           ENDDO i
#
#     ENDPARDO a, a1, b, j 
#
      PARDO a, i, b, j 
#
            Tiajb[i,a,j,b] = 0.0  
            Taibj[a,i,b,j] = 0.0  
#
            DO a1
#
               REQUEST           L2old_ab[i,a1,j,b]  
               REQUEST           Vpiqj[a1,i,b,j]  
               GET               Ibb[a1,a] # Gae_a(a,a1)
               GET               F1ae_a[a1,a]
#
               T1iajb[i,a,j,b] = L2old_ab[i,a1,j,b]*F1ae_a[a1,a]
               Tiajb[i,a,j,b] += T1iajb[i,a,j,b]
#
               T1aibj[a,i,b,j] = Vpiqj[a1,i,b,j]*Ibb[a1,a] # Taa(a1,a)
               Taibj[a,i,b,j] += T1aibj[a,i,b,j]
#
            ENDDO a1
#
            T1iajb[i,a,j,b]            = Taibj[a,i,b,j] 
            Tiajb[i,a,j,b]            += T1iajb[i,a,j,b] 
            PREPARE L2new_ab[i,a,j,b] += Tiajb[i,a,j,b]
#
      ENDPARDO a, i, b, j 
#
      PARDO j, a, i, b  
#
            Tiajb[i,a,j,b] = 0.0  
            Taibj[a,i,b,j] = 0.0  
#
            DO j1
#
               REQUEST           L2old_ab[i,a,j1,b]  
               REQUEST           Vpiqj[a,i,j1,j]     
               REQUEST           Vpiqj[a,i,b,j1]  
               GET               Ijj[j,j1]
               GET               F1mi_a[j,j1]
               GET               l1a_old[j1,b]
#
               T1iajb[i,a,j,b] = L2old_ab[i,a,j1,b]*F1mi_a[j,j1]
               Tiajb[i,a,j,b] -= T1iajb[i,a,j,b]
#
               T1aibj[a,i,b,j] = Vpiqj[a,i,j1,j]*l1a_old[j1,b]
               Taibj[a,i,b,j] -= T1aibj[a,i,b,j]
#
               T1aibj[a,i,b,j] = Vpiqj[a,i,b,j1]*Ijj[j,j1]
               Taibj[a,i,b,j] -= T1aibj[a,i,b,j]
#
            ENDDO j1
#
            T1iajb[i,a,j,b]            = Taibj[a,i,b,j]
            Tiajb[i,a,j,b]            += T1iajb[i,a,j,b] 
            PREPARE L2new_ab[i,a,j,b] += Tiajb[i,a,j,b]
#
      ENDPARDO j, a, i, b  
#
      PARDO i, a, b, j 
#
            Tiajb[i,a,j,b] = 0.0  
#
            DO i1
#
               REQUEST           L2old_ab[i1,a,j,b]  
               REQUEST           Vpiqj[i1,i,b,j]     
               REQUEST           Vpiqj[a,i1,b,j]     
               GET               Ijj[i,i1] # Gmi_a(i1,i)
               GET               F1mi_a[i,i1]
               GET               l1a_old[i1,a]
#
              #Tii(i,i1)       = Gmi_a(i1,i)
               T1iajb[i,a,j,b] = L2old_ab[i1,a,j,b]*F1mi_a[i,i1]
               Tiajb[i,a,j,b] -= T1iajb[i,a,j,b]
#
               T1iajb[i,a,j,b] = Vpiqj[i1,i,b,j]*l1a_old[i1,a]
               Tiajb[i,a,j,b] -= T1iajb[i,a,j,b]
#
              #DO a1
#
              #   GET          l1a_old(i,a1)
              #   GET          t1a_old(a1,i1)
#
              #   T1ii(i,i1) = l1a_old(i,a1)*t1a_old(a1,i1)
              #   Tii(i,i1) += T1ii(i,i1)
#
              #ENDDO a1
#
               T1iajb[i,a,j,b] = Vpiqj[a,i1,b,j]*Ijj[i,i1] # Tii(i,i1)
               Tiajb[i,a,j,b] -= T1iajb[i,a,j,b]
 
            ENDDO i1
#
            PREPARE L2new_ab[i,a,j,b] += Tiajb[i,a,j,b]
#
      ENDPARDO i, a, b, j 
#
      ENDPROC L2NEWAB 
#     --------------- 
#
#    ------------------------------------------------------------------------
#
      PROC UPDATEL2
#     -------------
#
      PARDO b, a, j, i
#
            REQUEST                    L2old_ab[j,b,i,a] 
            REQUEST                    L2new_ab[j,b,i,a] 
            Tiajb[i,a,j,b]           = L2new_ab[j,b,i,a]
            T1iajb[i,a,j,b]          = L2old_ab[j,b,i,a]
#
            REQUEST                    L2old_ab[i,a,j,b] 
            REQUEST                    L2new_ab[i,a,j,b] 
            Tiajb[i,a,j,b]          += L2new_ab[i,a,j,b]
            T1iajb[i,a,j,b]         += L2old_ab[i,a,j,b]
#
            execute energy_denominator_rhf Tiajb[i,a,j,b] fock_a
            t1iajb[i,a,j,b]         += tiajb[i,a,j,b]
            t1iajb[i,a,j,b]         *= -0.5

            if kiter < Idiis_order
               PREPARE Eiajb[i,a,j,b,kiter] = T1iajb[i,a,j,b]
            endif

            if kiter >= Idiis_order
               DO jdiis
                  if jdiis == Idiis_order
                     PREPARE Eiajb[i,a,j,b,jdiis] = T1iajb[i,a,j,b]
                     exit
                  endif
               ENDDO jdiis
            endif
#
      ENDPARDO b, a, j, i
      server_barrier 
#
      PARDO b, a, j, i
#
            REQUEST                    L2new_ab[i,a,j,b] 
            REQUEST                    L2new_ab[j,b,i,a] 
            tiajb[i,a,j,b]           = L2new_ab[j,b,i,a]
            tiajb[i,a,j,b]          += L2new_ab[i,a,j,b]
            tiajb[i,a,j,b]          *= -0.5
            execute energy_denominator_rhf tiajb[i,a,j,b] fock_a
            PREPARE L2old_ab[i,a,j,b]= tiajb[i,a,j,b]
      ENDPARDO b, a, j, i
#
      ENDPROC UPDATEL2
#     ----------------
#
      PROC UPDATEL1
#     -------------
#
      PARDO a, i 
#
            GET                        l1a_new[i,a]
            GET                        l1a_old[i,a]
            tia[i,a]                 = l1a_new[i,a] 
            t1ia[i,a]                = l1a_old[i,a] 
            execute energy_denominator_rhf tia[i,a] fock_a
            t1ia[i,a]               += tia[i,a] 
            t1ia[i,a]               *= -1.0

            if kiter < Idiis_order
               PUT Eia[i,a,kiter] = T1ia[i,a]
            endif

            if kiter >= Idiis_order
               DO jdiis
                  if jdiis == Idiis_order
                     PUT Eia[i,a,jdiis] = T1ia[i,a]
                     exit
                  endif
               ENDDO jdiis
            endif
#
      ENDPARDO a, i 
#
      server_barrier

      PARDO a, i
#
            GET                        l1a_new[i,a]
            tia[i,a]  = l1a_new[i,a]
            tia[i,a] *= -1.0
            execute energy_denominator_rhf tia[i,a] fock_a
            PUT l1a_old[i,a]         = tia[i,a]
#
      ENDPARDO a, i
#
      ENDPROC UPDATEL1
#     ----------------

      PROC MOVEL2 
#     ----------- 
#
      PARDO a,a1,i,i1
#
            REQUEST                    L2old_aa[i,a,i1,a1]
            Tiaia[i,a,i1,a1]           = L2old_aa[i,a,i1,a1]

            if kiter < Idiis_order
               PREPARE Diaia[i,a,i1,a1,kiter] = Tiaia[i,a,i1,a1]
            endif

            if kiter >= Idiis_order
               DO kdiis
                  if kdiis == (Idiis_order - 1)
                     PREPARE Diaia[i,a,i1,a1,kdiis] = Tiaia[i,a,i1,a1]
                     exit
                  endif
               ENDDO kdiis
            endif
#
      ENDPARDO a,a1,i,i1
#
      PARDO b, a, j, i
            REQUEST                    L2old_ab[i,a,j,b]
            Tiajb[i,a,j,b]           = L2old_ab[i,a,j,b]

            if kiter < Idiis_order
               PREPARE Diajb[i,a,j,b,kiter] = Tiajb[i,a,j,b]
            endif

            if kiter >= Idiis_order
               DO kdiis
                  if kdiis == (Idiis_order - 1)
                     PREPARE Diajb[i,a,j,b,kdiis] = Tiajb[i,a,j,b]
                     exit
                  endif
               ENDDO kdiis
            endif
#
      ENDPARDO b, a, j, i
#
#
      ENDPROC MOVEL2 
#     -------------- 
#
      PROC MOVEL1
#     ------------
#
      PARDO a, i
#
            GET        L1a_old[i,a]
            tia[i,a] = L1a_old[i,a]

            if kiter < Idiis_order
               PUT Dia[i,a,kiter] = Tia[i,a]
            endif

            if kiter >= Idiis_order
               DO kdiis
                  if kdiis == (Idiis_order - 1)
                     PUT Dia[i,a,kdiis] = Tia[i,a]
                     exit
                  endif
               ENDDO kdiis
            endif
#
      ENDPARDO a, i
#
      ENDPROC MOVEL1
#     --------------
#
#    ------------------------------------------------------------------------
#
     PROC LIGUESS
#
#    ------------------------------------------------------------------------
#
     PARDO a, a1, i, i1
#
           REQUEST T2old_aa[a,i,a1,i1]  
           Tiaia[i,a,i1,a1] = T2old_aa[a,i,a1,i1]
           PREPARE L2old_aa[i,a,i1,a1] = Tiaia[i,a,i1,a1]
           PREPARE D0iaia[i,a,i1,a1] = Tiaia[i,a,i1,a1] 
#
     ENDPARDO a, a1, i, i1
#
     PARDO b, a, j, i
#
           REQUEST T2old_ab[a,i,b,j]  
           Tiajb[i,a,j,b] = T2old_ab[a,i,b,j]
           PREPARE L2old_ab[i,a,j,b] = Tiajb[i,a,j,b]
           PREPARE D0iajb[i,a,j,b] = Tiajb[i,a,j,b]
#
     ENDPARDO b, a, j, i
#
     PARDO a, i
#
           GET t1a_old[a,i]
           tia[i,a] = t1a_old[a,i]
           PUT l1a_old[i,a] = tia[i,a]
           PREPARE D0ia[i,a] = tia[i,a]
#
     ENDPARDO a, i
#
#    ------------------------------------------------------------------------
#
     ENDPROC LIGUESS
#
#    ------------------------------------------------------------------------
#
#
#    ------------------------------------------------------------------------
#
     PROC LENERGY
#
#    ------------------------------------------------------------------------
#
     esum    = 0.0
     ecorraa = 0.0
     PARDO a, a1, i, i1
#
           REQUEST VSpipi[a,i,a1,i1]    
           REQUEST L2new_aa[i,a,i1,a1]  
#
           GET l1a_new[i1,a1]
           GET l1a_new[i1,a]
           GET l1a_new[i,a1]
           GET l1a_new[i,a]
#
           tia[i1,a1]         =          l1a_new[i1,a1]
           T2iaia[i,a,i1,a1]  = l1a_new[i,a]^tia[i1,a1]
           tia[i,a1]          =           l1a_new[i,a1]
           T3iaia[i,a,i1,a1]  = l1a_new[i1,a]^tia[i,a1]
           T2iaia[i,a,i1,a1] -= T3iaia[i,a,i1,a1]
           T2iaia[i,a,i1,a1]  = L2new_aa[i,a,i1,a1]
#
           etemp = VSpipi[a,i,a1,i1]*T2iaia[i,a,i1,a1]
           etemp = 0.25*etemp
           esum += etemp
#
     ENDPARDO a, a1, i, i1
#
     server_barrier 
     server_barrier 
     collective ecorraa += esum
     server_barrier 
    #execute print_scalar ecorraa
#
     esum    = 0.0
     ecorrbb = 0.0
     PARDO b, b1, j, j1
#
           REQUEST VSpipi[b,j,b1,j1]    
           REQUEST L2new_aa[j,b,j1,b1]  
#
           GET l1a_new[j1,b1]
           GET l1a_new[j1,b]
           GET l1a_new[j,b1]
           GET l1a_new[j,b]
#
           tjb[j1,b1]         =          l1a_new[j1,b1]
           T2jbjb[j,b,j1,b1]  = l1a_new[j,b]^tjb[j1,b1]
           tjb[j,b1]          =           l1a_new[j,b1]
           T3jbjb[j,b,j1,b1]  = l1a_new[j1,b]^tjb[j,b1]
           T2jbjb[j,b,j1,b1] -= T3jbjb[j,b,j1,b1]
           T2jbjb[j,b,j1,b1]  = L2new_aa[j,b,j1,b1]
#
           etemp = VSpipi[b,j,b1,j1]*T2jbjb[j,b,j1,b1]
           etemp = 0.25*etemp
           esum += etemp
#
     ENDPARDO b, b1, j, j1
#
     server_barrier 
     server_barrier 
     collective ecorrbb += esum
     server_barrier 
    #execute print_scalar ecorrbb
#
     ecorrab = 0.0
     esum    = 0.0
     PARDO a, b, i, j
#
           REQUEST Vpiqj[a,i,b,j]     
           REQUEST L2new_ab[i,a,j,b]  
           GET l1a_new[i,a]
           GET l1a_new[j,b]
           tia[j,b] = l1a_new[j,b]
#
           Tiajb[i,a,j,b]  = l1a_new[i,a]^tia[j,b]
           Tiajb[i,a,j,b]  = L2new_ab[i,a,j,b]
#
           etemp = Tiajb[i,a,j,b]*Vpiqj[a,i,b,j]
           esum += etemp
#
     ENDPARDO a, b, i, j
     server_barrier 
     server_barrier 
     collective ecorrab += esum
     server_barrier 
    #execute print_scalar ecorrab
#
     ecorrT  = ecorraa
     ecorrT += ecorrbb
     ecorrT += ecorrab
    #execute print_scalar ecorrT 
#
#    ------------------------------------------------------------------------
#
     ENDPROC LENERGY
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC LOLDENERGY
#
#    ------------------------------------------------------------------------
#
     esuma   = 0.0
     ecorraa = 0.0
     PARDO a, a1, i, i1
#
           REQUEST VSpipi[a,i,a1,i1]    
           REQUEST L2old_aa[i,a,i1,a1]  
#
           etemp = VSpipi[a,i,a1,i1]*L2old_aa[i,a,i1,a1]
           etemp = 0.25*etemp
           esuma += etemp
#
     ENDPARDO a, a1, i, i1
#
     esumb    = 0.0
     ecorrbb = 0.0
     PARDO b, b1, j, j1
#
           REQUEST VSpipi[b,j,b1,j1]    
           REQUEST L2old_aa[j,b,j1,b1]  
#
           etemp = VSpipi[b,j,b1,j1]*L2old_aa[j,b,j1,b1]
           etemp = 0.25*etemp
           esumb += etemp
#
     ENDPARDO b, b1, j, j1
#
     ecorrab = 0.0
     esumab  = 0.0
     PARDO a, b, i, j
#
           REQUEST Vpiqj[a,i,b,j]  
           REQUEST L2old_ab[i,a,j,b]  
#
           etemp = L2old_ab[i,a,j,b]*Vpiqj[a,i,b,j]
           esumab += etemp
#
     ENDPARDO a, b, i, j
#
     server_barrier 
     server_barrier 

     collective ecorraa += esuma
    #execute print_scalar ecorraa

     collective ecorrbb += esumb
    #execute print_scalar ecorrbb

     collective ecorrab += esumab
    #execute print_scalar ecorrab
#
     ecorrT  = ecorraa + ecorrbb
     ecorrT += ecorrab
    #execute print_scalar ecorrT 

     #print ecorrT
#
#    ------------------------------------------------------------------------
#
     ENDPROC LOLDENERGY
#
#    ------------------------------------------------------------------------
#
# In this superprocedure the contributions to the lambda amplitude
# equations from the W^{ef}_{ab} intermediate are computed. The
# contributions are split into two pieces, those using;
# 
# 1. the V^{ab}_{cd} integrals --> PROC LLADDER  
# 2. not using the V^{ab}_{cd} integrals
#    a. L1 contributions       --> PROC L1WABCD 
#    b. L2 contributions       --> PROC L2WABCD 
#
# ------------------------------------------------------------------------------- 
#
      PROC LLADDER 
#     ------------ 
#
# ------------------------------------------------------------------------------- 
#
#     Compute half back transformed 2-particle lambda arrays 
#     ------------------------------------------------------ 
#
#     AB spin combination 
#     ------------------- 
#
      PARDO a, b, i, j  
#
            REQUEST L2old_ab[i,a,j,b] 
# 
            DO mu 
#
               Zab[i,mu,j,b] = L2old_ab[i,a,j,b]*ca[mu,a] 
#
               DO nu 
#
                  Tixjx[i,mu,j,nu]         = Zab[i,mu,j,b]*ca[nu,b] 
                  PREPARE Z2ab[i,mu,j,nu] += Tixjx[i,mu,j,nu]  
#
               ENDDO nu 
#
            ENDDO mu 
#
      ENDPARDO a, b, i, j  

      server_barrier 
#
#     Contract half transformed amplitudes with AO integrals 
#     ------------------------------------------------------ 
# 
      PARDO mu, lambda, sigma
#
            DO nu 
#
            IF mu < nu 
#
               execute compute_integral_batch aoint[lambda,mu,sigma,nu]
#
#              AB spin combination 
#              ------------------- 
# 
               DO i
               DO j
#
                  REQUEST                       Z2ab[i,lambda,j,sigma]  
                  Yab[i,mu,j,nu]              = aoint[lambda,mu,sigma,nu]*Z2ab[i,lambda,j,sigma]
                  Y1ab[j,nu,i,mu]             = Yab[i,mu,j,nu]  
#
                  PREPARE L2AO_ab[i,mu,j,nu] += Yab[i,mu,j,nu]
                  PREPARE L2AO_ab[j,nu,i,mu] += Y1ab[j,nu,i,mu]
#
               ENDDO j
               ENDDO i
#
            ENDIF # mu < nu 
#
            ENDDO nu 
# 
      ENDPARDO mu, lambda, sigma
# 
      PARDO mu, lambda, sigma
#
            DO nu 
#
            IF mu == nu 
#
               execute compute_integral_batch aoint[lambda,mu,sigma,nu]
#
#              AB spin combination 
#              ------------------- 
# 
               DO i
               DO j
#
                  REQUEST                       Z2ab[i,lambda,j,sigma]  
                  Yab[i,mu,j,nu]              = aoint[lambda,mu,sigma,nu]*Z2ab[i,lambda,j,sigma]
                  PREPARE L2AO_ab[i,mu,j,nu] += Yab[i,mu,j,nu]
#
               ENDDO j
               ENDDO i
#
            ENDIF # mu == nu 
#
            ENDDO nu 
# 
      ENDPARDO mu, lambda, sigma
# 
#     Perform final two transformations of L2AO  
#     ----------------------------------------- 
# 
      server_barrier  
#
#     AA spin combination 
#     ------------------- 
#
      PARDO mu, nu, i, i1 # VFL 
#
            REQUEST              L2AO_ab[i,mu,i1,nu]  
            REQUEST              L2AO_ab[i,nu,i1,mu]  
            tixix[i,mu,i1,nu]  = L2AO_ab[i,mu,i1,nu] 
            t1ixix[i,mu,i1,nu] = L2AO_ab[i,nu,i1,mu] 
            tixix[i,mu,i1,nu] -= t1ixix[i,mu,i1,nu] 
           #tixix(i,mu,i1,nu) *= 2.0  
#
            DO a
#
               Tiaix[i,a,i1,nu]  = tixix[i,mu,i1,nu]*ca[mu,a]
#
               DO a1
#
                  GET        t1a_old[a1,i1] 
                  Tiaia[i,a,i1,a1]  = Tiaix[i,a,i1,nu]*ca[nu,a1]
                 #Tiaia(i,a,i1,a1) *= 0.5
                  Tia[i,a] = Tiaia[i,a,i1,a1]*t1a_old[a1,i1] 
#
#                 Update L1new 
#                 ------------ 
                  PUT l1a_new[i,a] += Tia[i,a] 
#
               ENDDO a1
#
            ENDDO a
#
      ENDPARDO mu, nu, i, i1
#
#     AB spin combination 
#     ------------------- 
#
      PARDO mu, nu, i, j # VFL 
#
            REQUEST L2AO_ab[i,mu,j,nu]  
#
            DO a
#
               Tiajx[i,a,j,nu]  = L2AO_ab[i,mu,j,nu]*ca[mu,a]
#
               DO b
#
                  Tiajb[i,a,j,b]  = Tiajx[i,a,j,nu]*ca[nu,b]
#
#                 Update L2new 
#                 ------------ 
                  PREPARE L2new_ab[i,a,j,b] += Tiajb[i,a,j,b]
#
                  GET        t1a_old[b,j] 
                  Tia[i,a] = Tiajb[i,a,j,b]*t1a_old[b,j] 
#
#                 Update L1new 
#                 ------------ 
                  PUT l1a_new[i,a] += Tia[i,a] 
#
               ENDDO b
#
            ENDDO a
#
      ENDPARDO mu, nu, i, j
#
      server_barrier   
#
# ------------------------------------------------------------------------------- 
#
      ENDPROC LLADDER 
#
# ------------------------------------------------------------------------------- 
#
# ------------------------------------------------------------------------------- 
#
      PROC L2WABCDab  
#
# ------------------------------------------------------------------------------- 
#
#     AB spin combination 
#     ------------------- 
#
      create Iiijb 
      create Iiajj 
      create Iiijj 
      server_barrier 
#
      PARDO i, j, a, b   
#
            REQUEST L2old_ab[i,a,j,b]   
#
            DO i1  
            DO j1  
#
               REQUEST                 Tau_ab[a,i1,b,j1]   
               Tiijj[i,i1,j,j1]      = L2old_ab[i,a,j,b]*Tau_ab[a,i1,b,j1] 
               PUT Iiijj[i,i1,j,j1] += Tiijj[i,i1,j,j1] 
#
            ENDDO j1   
            ENDDO i1 
#
            DO i1   
#
               GET                    t1a_old[a,i1] 
               Tiijb[i,i1,j,b]      = L2old_ab[i,a,j,b]*t1a_old[a,i1]
               PUT Iiijb[i,i1,j,b] += Tiijb[i,i1,j,b] 
#
            ENDDO i1   
#
            DO j1  
#
               GET                    t1a_old[b,j1] 
               Tiajj[i,a,j,j1]      = L2old_ab[i,a,j,b]*t1a_old[b,j1] 
               PUT Iiajj[i,a,j,j1] += Tiajj[i,a,j,j1] 
#
            ENDDO j1 
#
      ENDPARDO i, j, a, b 
#
      server_barrier 
#
      PARDO a, b, i1, b1 
#
            REQUEST Vaabj[b,b1,a,i1]   
#
            DO i  
            DO j  
#
               GET                          Iiijb[i,i1,j,b1]
               Tiajb[i,a,j,b]             = Vaabj[b,b1,a,i1]*Iiijb[i,i1,j,b1] 
               Tiajb[i,a,j,b]            *= -1.0   
               PREPARE L2new_ab[i,a,j,b] += Tiajb[i,a,j,b] 
#
            ENDDO j  
            ENDDO i  
#
      ENDPARDO a, b, i1, b1 
#
      PARDO a, b, j1, a1 
#
            REQUEST Vaabj[a,a1,b,j1]   
# 
            DO i  
            DO j  
#
               GET                          Iiajj[i,a1,j,j1] 
               Tiajb[i,a,j,b]             = Iiajj[i,a1,j,j1]*Vaabj[a,a1,b,j1] 
               Tiajb[i,a,j,b]            *= -1.0   
               PREPARE L2new_ab[i,a,j,b] += Tiajb[i,a,j,b] 
# 
            ENDDO j 
            ENDDO i  
#
      ENDPARDO a, b, j1, a1 
#
      PARDO a, b, i1, j1 
#
            REQUEST Vpiqj[a,i1,b,j1]   
#
            DO i  
            DO j  
#
               GET                          Iiijj[i,i1,j,j1]
               Tiajb[i,a,j,b]             = Iiijj[i,i1,j,j1]*Vpiqj[a,i1,b,j1] 
               PREPARE L2new_ab[i,a,j,b] += Tiajb[i,a,j,b] 
#
            ENDDO j  
            ENDDO i  
#
      ENDPARDO a, b, i1, j1 
#
      server_barrier 
      delete Iiijb 
      delete Iiajj 
      delete Iiijj 
# 
# ------------------------------------------------------------------------------- 
#
      ENDPROC L2WABCDab  
#
# ------------------------------------------------------------------------------- 
#
# ------------------------------------------------------------------------------- 
# 
      PROC L1WABCDa 
#     -------------- 
#
#     First piece
#     -----------
#
      create Xiiia
      server_barrier
      PARDO i, i2, a1, a2
#
            REQUEST                  L2old_aa[i,a1,i2,a2]  
            REQUEST                  L2old_aa[i,a2,i2,a1]  
            tiaia[i,a1,i2,a2]      = L2old_aa[i,a1,i2,a2]
            t1iaia[i,a1,i2,a2]     = L2old_aa[i,a2,i2,a1]
            t1iaia[i,a1,i2,a2]    -= tiaia[i,a1,i2,a2]
#
            DO i3
#
               GET                      t1a_old[a1,i3]
               tiiia[i,i3,i2,a2]      = t1iaia[i,a1,i2,a2]*t1a_old[a1,i3]
               PUT Xiiia[i,i3,i2,a2] += tiiia[i,i3,i2,a2]
#
            ENDDO i3
#
      ENDPARDO i, i2, a1, a2
      server_barrier
#
      PARDO a, a2, a3, i3 
#
            REQUEST VSaaai[a3,a2,a,i3]  
#
            DO i
            DO i2
#
               GET                 Xiiia[i,i3,i2,a2]
               GET                 t1a_old[a3,i2]
#
               Tiaia[i,a,i2,a3]  = Xiiia[i,i3,i2,a2]*VSaaai[a3,a2,a,i3]
               tia[i,a]          = Tiaia[i,a,i2,a3]*t1a_old[a3,i2]
               tia[i,a]         *= 0.5
               PUT l1a_new[i,a] += tia[i,a]
#
            ENDDO i2
            ENDDO i
#
      ENDPARDO a, a2, a3, i3 
      server_barrier
      delete Xiiia
#
# 'Fix' on 9/29/08 
# ---------------- 
#
      create Xiiii  
      create Xiiia  
      server_barrier 
#
      PARDO i, i2, a1, a2  
#
            REQUEST L2old_aa[i,a1,i2,a2]  
#
            DO i3  
            DO i4  
#
               REQUEST                  Tau_aa[a1,i3,a2,i4]  
               Tiiii[i,i3,i2,i4]      = L2old_aa[i,a1,i2,a2]*Tau_aa[a1,i3,a2,i4]
               PUT Xiiii[i,i3,i2,i4] += Tiiii[i,i3,i2,i4]
#
            ENDDO i4  
            ENDDO i3  
#
      ENDPARDO i, i2, a1, a2  
#
      PARDO i3, a, i4, a3  
#
            REQUEST VSpipi[a,i3,a3,i4]  
#
            DO i2  
#
               GET                      t1a_old[a3,i2]
               Tiiia[i4,i2,i3,a]      = VSpipi[a,i3,a3,i4]*t1a_old[a3,i2]
               PUT Xiiia[i4,i2,i3,a] += Tiiia[i4,i2,i3,a]
#
            ENDDO i2  
#
      ENDPARDO i3, a, i4, a3 
      server_barrier 
#
      PARDO a, i2, i3, i4
#
            GET Xiiia[i4,i2,i3,a] 
#
            DO i
#
               GET                 Xiiii[i,i3,i2,i4] 
               tia[i,a]          = Xiiii[i,i3,i2,i4]*Xiiia[i4,i2,i3,a]
               tia[i,a]         *= 0.25
               PUT l1a_new[i,a] += tia[i,a]
#
            ENDDO i
#
      ENDPARDO a, i2, i3, i4
#
#     Second piece
#     ------------
#
      create Xiajj
      create Xiibj
      server_barrier
      delete Xiiia 
      delete Xiiii 
      PARDO i, j2, a1, b1
#
            REQUEST L2old_ab[i,a1,j2,b1]  
#
            DO j1
#
               GET t1a_old[b1,j1]
#
               Tiajj[i,a1,j2,j1]      = L2old_ab[i,a1,j2,b1]*t1a_old[b1,j1]
               PUT Xiajj[i,a1,j2,j1] += Tiajj[i,a1,j2,j1]
#
            ENDDO j1
#
            DO i1
#
               GET t1a_old[a1,i1]
#
               Tiibj[i1,i,b1,j2]      = L2old_ab[i,a1,j2,b1]*t1a_old[a1,i1]
               PUT Xiibj[i1,i,b1,j2] += Tiibj[i1,i,b1,j2]
#
            ENDDO i1
#
      ENDPARDO i, j2, a1, b1
      server_barrier
#
      PARDO a, b, a1, j1  
#
#           Actual contribution computed. 
#           ----------------------------- 
#           T1iabj(i,a,b,j2) = -Xiajj(i,a1,j2,j1)*Vaabj(a,a1,b,j1)*t1b_old(b,j2)
#
            REQUEST Vaabj[a,a1,b,j1]  
            Tajab[a1,j1,a,b]  = Vaabj[a,a1,b,j1]
#
            DO i
            DO j2
#
               GET                 Xiajj[i,a1,j2,j1]
               GET                 t1a_old[b,j2]
#
               Tijaj[i,j2,a1,j1] = Xiajj[i,a1,j2,j1]
#
               Tijab[i,j2,a,b]   = Tijaj[i,j2,a1,j1]*Tajab[a1,j1,a,b]
               Tiabj[i,a,b,j2]   = Tijab[i,j2,a,b]
#
               tia[i,a]          = Tiabj[i,a,b,j2]*t1a_old[b,j2]
               tia[i,a]         *= -1.0
               PUT l1a_new[i,a] += tia[i,a]
#
            ENDDO j2
            ENDDO i
#
      ENDPARDO a, b, a1, j1 
#
      PARDO a, b, b1, i1  
#
#           Actual term computed. 
#           ---------------------
#           T1iabj(i,a,b,j2) = -Xiibj(i1,i,b1,j2)*Vbbai(b,b1,a,i1)*t1b_old(b,j2)
#
            REQUEST Vaabj[b,b1,a,i1]  
            Tibab[i1,b1,a,b]  = Vaabj[b,b1,a,i1]
#
            DO j2  
            DO i
#
               GET                 Xiibj[i1,i,b1,j2]
               GET                 t1a_old[b,j2]
#
               Tijib[i,j2,i1,b1] = Xiibj[i1,i,b1,j2]
#
               Tijab[i,j2,a,b]   = Tijib[i,j2,i1,b1]*Tibab[i1,b1,a,b]
               Tiabj[i,a,b,j2]   = Tijab[i,j2,a,b]
#
               tia[i,a]          = Tiabj[i,a,b,j2]*t1a_old[b,j2]
               tia[i,a]         *= -1.0
               PUT l1a_new[i,a] += tia[i,a]
#
            ENDDO i
            ENDDO j2  
#
      ENDPARDO a, b, b1, i1  
#
      server_barrier
      delete Xiajj
      delete Xiibj
#
# Fix the final abomination 
# ------------------------- 
#
      create Xiijj 
      create Xiajj 
      server_barrier 
#
      PARDO i1, j1, a1, b1  
#
            REQUEST Tau_ab[a1,i1,b1,j1]  
#
            DO i
            DO j2  
#
               REQUEST                  L2old_ab[i,a1,j2,b1] 
               Tiijj[i,i1,j2,j1]      = L2old_ab[i,a1,j2,b1]*Tau_ab[a1,i1,b1,j1]
               PUT Xiijj[i,i1,j2,j1] += Tiijj[i,i1,j2,j1]
#
            ENDDO j2  
            ENDDO i
#
      ENDPARDO i1, j1, a1, b1  
#
      PARDO i1, j1, a, b  
#
            REQUEST Vpiqj[a,i1,b,j1]  
#
            DO j2  
#
               GET                      t1a_old[b,j2]
               Tiajj[i1,a,j1,j2]      = Vpiqj[a,i1,b,j1]*t1a_old[b,j2]
               PUT Xiajj[i1,a,j1,j2] += Tiajj[i1,a,j1,j2]
#
            ENDDO j2  
#
      ENDPARDO i1, j1, a, b  
      server_barrier 
#
      PARDO a, i1, j1, j2
#
            GET Xiajj[i1,a,j1,j2] 
#
            DO i
#
               GET                 Xiijj[i,i1,j2,j1] 
               tia[i,a]          = Xiijj[i,i1,j2,j1]*Xiajj[i1,a,j1,j2]
               PUT l1a_new[i,a] += tia[i,a]
#
            ENDDO i
#
      ENDPARDO a, i1, j1, j2
#
      server_barrier 
      delete Xiijj 
      delete Xiajj 
#
# -------------------------------------------------------------------------------
#
# ------------------------------------------------------------------------------- 
#
      ENDPROC L1WABCDa 
#     ---------------- 
#
# ------------------------------------------------------------------------------- 
# 
# -------------------------------------------------------------------------------
#
      PROC VABCD
#     ----------
#
           CALL LLADDER
          #CALL L2WABCDaa
          #CALL L2WABCDbb
           CALL L2WABCDab
#
           CALL L1WABCDa
          #CALL L1WABCDb
#
      ENDPROC VABCD
#     -------------
#
# ------------------------------------------------------------------------------- 
#
     PROC L2ZERO
#
          PARDO a, b, i, j
#                Tiajb[i,a,j,b] = 0.0
#                PREPARE L2new_ab[i,a,j,b] = Tiajb[i,a,j,b]
                PREPARE L2new_ab[i,a,j,b] = 0.0
          ENDPARDO a, b, i, j
#
#     Zero-out intermediate arrays used in the ladder term 
#     ----------------------------------------------------
#     
          PARDO mu, nu, i, j
                Tixjx[i,mu,j,nu]           = 0.0
#                PREPARE Z2ab[i,mu,j,nu]    = Tixjx[i,mu,j,nu]
#                PREPARE L2AO_ab[i,mu,j,nu] = Tixjx[i,mu,j,nu]
                PREPARE Z2ab[i,mu,j,nu]    = 0.0
                PREPARE L2AO_ab[i,mu,j,nu] = 0.0
          ENDPARDO mu, nu, i, j
#
     ENDPROC L2ZERO
#
     PROC DIISN
#     ---------- 

      worder = niter 
      if niter >= diis_order 
         worder = diis_order 
      endif 
      Iorder = (int)worder
      sip_barrier 
      PARDO a, i, b, j 
         DO jdiis 
         where jdiis <= Iorder

               REQUEST Eiajb[i,a,j,b,jdiis]   
               REQUEST Eiajb[j,a,i,b,jdiis]   

               t1iajb[i,a,j,b] = Eiajb[i,a,j,b,jdiis] 
               t3iajb[j,a,i,b] = Eiajb[j,a,i,b,jdiis] 
               t2iajb[i,a,j,b] = t3iajb[j,a,i,b] 
               t1iajb[i,a,j,b]-= t2iajb[i,a,j,b] 

         DO j1diis 
         where j1diis <= Iorder

               REQUEST Eiajb[i,a,j,b,j1diis]   
               REQUEST Eiajb[j,a,i,b,j1diis]   

               t3iajb[i,a,j,b] = Eiajb[i,a,j,b,j1diis] 
               t2iajb[j,a,i,b] = Eiajb[j,a,i,b,j1diis] 
               t4iajb[i,a,j,b] = t2iajb[j,a,i,b] 
               t3iajb[i,a,j,b]-= t4iajb[i,a,j,b] 
 
               TDbb[jdiis,j1diis]          = Eiajb[i,a,j,b,jdiis]*Eiajb[i,a,j,b,j1diis] 
               TDbb[jdiis,j1diis]         *= 2.0  
               PUT DIST_BB[jdiis,j1diis] += TDbb[jdiis,j1diis]  
 
               etemp                       = t1iajb[i,a,j,b]*t3iajb[i,a,j,b] 
               TDbb[jdiis,j1diis]          = etemp 
               PUT DIST_BB[jdiis,j1diis] += TDbb[jdiis,j1diis]  
         ENDDO j1diis 
         ENDDO jdiis 
      ENDPARDO a, i, b, j 

      PARDO a, i 
         DO jdiis 
         where jdiis <= Iorder

               GET Eia[i,a,jdiis] 

         DO j1diis 
         where j1diis <= Iorder

               GET Eia[i,a,j1diis] 

               TDbb[jdiis,j1diis]          = Eia[i,a,jdiis]*Eia[i,a,j1diis] 
               TDbb[jdiis,j1diis]         *= 4.0  
               PUT DIST_BB[jdiis,j1diis] += TDbb[jdiis,j1diis]  
 
         ENDDO j1diis 
         ENDDO jdiis 
      ENDPARDO a, i  

      sip_barrier 

      DO jdiis 
      where jdiis <= Iorder
	  DO j1diis 
	  where j1diis <= Iorder
		GET DIST_BB[jdiis,j1diis] 
		BB[jdiis,j1diis] = DIST_BB[jdiis,j1diis] 
		#print BB[jdiis,j1diis]
	  ENDDO j1diis 
      ENDDO jdiis 

      execute compute_diis BB 
      sip_barrier 
      DO jdiis 
      where jdiis <= Iorder
	  DO j1diis 
	  where j1diis <= Iorder
		#print BB[jdiis,j1diis]
	  ENDDO j1diis 
      ENDDO jdiis 

      PARDO a, i, b, j 
            tiajb[i,a,j,b] = 0.0 
            DO kdiis   
	    where kdiis < Iorder
               n1 = (scalar)kdiis
            
                  REQUEST           Diajb[i,a,j,b,kdiis]   
                  t2iajb[i,a,j,b] = Diajb[i,a,j,b,kdiis] 
                  DO d2   
                  where d2 <= Iorder 
                      n2 = (scalar)d2
                      kcount  = n2 
                      kcount -= n1 
                      if kcount == one 
                         REQUEST           Eiajb[i,a,j,b,d2]   
                         t3iajb[i,a,j,b] = Eiajb[i,a,j,b,d2] 
			 etemp =  BB[d2,d2]
                         t3iajb[i,a,j,b] += t2iajb[i,a,j,b] 
                         t3iajb[i,a,j,b] *= etemp   
                         tiajb[i,a,j,b]  += t3iajb[i,a,j,b]  
                      endif 
                   ENDDO d2 
            ENDDO kdiis  

            DO d2   
               if d2 == 1
                  REQUEST           D0iajb[i,a,j,b]  
                  t2iajb[i,a,j,b] = D0iajb[i,a,j,b] 
                  REQUEST           Eiajb[i,a,j,b,d2]   
                  t3iajb[i,a,j,b] = Eiajb[i,a,j,b,d2] 
		  etemp =  BB[d2,d2]
                  t3iajb[i,a,j,b] += t2iajb[i,a,j,b] 
                  t3iajb[i,a,j,b] *= etemp   
                  tiajb[i,a,j,b]  += t3iajb[i,a,j,b]  
               endif 
            ENDDO d2 

            PREPARE L2old_ab[i,a,j,b] = tiajb[i,a,j,b]
      ENDPARDO a, i, b, j 

      PARDO a, i 
            tia[i,a] = 0.0 
            DO kdiis    
	    where kdiis < Iorder
               n1 = (scalar)kdiis
               GET         Dia[i,a,kdiis] 
               t2ia[i,a] = Dia[i,a,kdiis] 
            
		DO d2   
		where d2 <= Iorder
		   n2 = (scalar)d2
		   kcount  = n2 
		   kcount -= n1 
		   if kcount == one 
		      GET         Eia[i,a,d2] 
		      t3ia[i,a] = Eia[i,a,d2] 
		      etemp = BB[d2,d2]
		      t3ia[i,a] += t2ia[i,a] 
		      t3ia[i,a] *= etemp   
		      tia[i,a]  += t3ia[i,a]  
		   endif 
		ENDDO d2   
            ENDDO kdiis 

            DO d2   
               if d2 == 1
                  REQUEST D0ia[i,a]  
                  t2ia[i,a] = D0ia[i,a] 
                  GET         Eia[i,a,d2] 
                  t3ia[i,a] = Eia[i,a,d2] 
                  etemp = BB[d2,d2]
                  t3ia[i,a] += t2ia[i,a] 
                  t3ia[i,a] *= etemp   
                  tia[i,a]  += t3ia[i,a]  
               endif 
            ENDDO d2   

            PUT L1a_old[i,a] = tia[i,a]  
      ENDPARDO a, i  

      server_barrier

# If history space is full shift history end error vectors 

      if kiter >= Idiis_order  

# histories first 

      PARDO a, i, b, j 
      DO kdiis 
      where kdiis < Iorder
         n1 = (scalar)kdiis
         REQUEST Diajb[i,a,j,b,kdiis]   
         tiajb[i,a,j,b] = Diajb[i,a,j,b,kdiis] 
	  DO k1diis 
	     n2 = (scalar)k1diis
	     etemp = n1 
	     etemp -= n2 
	     if etemp == 1.0 
		PREPARE Diajb[i,a,j,b,k1diis] = tiajb[i,a,j,b] 
	     endif 
	  ENDDO k1diis  
	     if n1 == one 
		PREPARE D0iajb[i,a,j,b] = tiajb[i,a,j,b] 
	     endif 
      ENDDO kdiis 
      ENDPARDO a, i, b, j 

      PARDO a, i  
      DO kdiis 
      where kdiis < Iorder
          n1 = (scalar)kdiis
          GET Dia[i,a,kdiis]   
          tia[i,a] = Dia[i,a,kdiis]   
	  DO k1diis 
	     n2 = (scalar)k1diis
	     etemp = n1 
	     etemp -= n2 
	     if etemp == 1.0 
		PUT Dia[i,a,k1diis] = tia[i,a] 
	     endif 
	  ENDDO k1diis  
	     if n1 == one 
		PREPARE D0ia[i,a] = tia[i,a] 
	     endif 
      ENDDO kdiis 
      ENDPARDO a, i  

# Now error vectors 

      PARDO a, i, b, j 
      DO kdiis 
      where kdiis <= Iorder
         n1 = (scalar)kdiis
         REQUEST Eiajb[i,a,j,b,kdiis]   
         tiajb[i,a,j,b] = Eiajb[i,a,j,b,kdiis] 
	  DO k1diis 
	     n2 = (scalar)k1diis
	     etemp = n1 
	     etemp -= n2 
	     if etemp == 1.0 
		PREPARE Eiajb[i,a,j,b,k1diis] = tiajb[i,a,j,b] 
	     endif 
	  ENDDO k1diis  
      ENDDO kdiis 
      ENDPARDO a, i, b, j 

      PARDO a, i  
      DO kdiis 
      where kdiis <= Iorder
         n1 = (scalar)kdiis
         GET Eia[i,a,kdiis]   
         tia[i,a] = Eia[i,a,kdiis]   
	  DO k1diis 
	     n2 = (scalar)k1diis
	     etemp = n1 
	     etemp -= n2 
	     if etemp == 1.0 
		PUT Eia[i,a,k1diis] = tia[i,a] 
	     endif 
	  ENDDO k1diis  
      ENDDO kdiis 
      ENDPARDO a, i  
      endif 
      server_barrier

     ENDPROC DIISN

    PROC form_Dscf

    pardo mu,nu
#        Txx[mu,nu] = 0.0
#	prepare Dxx_scf[mu,nu] = Txx[mu,nu]
	prepare Dxx_scf[mu,nu] = 0.0
    endpardo mu,nu
    server_barrier
    pardo mu,nu
        Txx[mu,nu] = 0.0
	do i
	    Txx1[mu,nu] = Ca[mu,i]*Ca[nu,i]
	    Txx[mu,nu] += Txx1[mu,nu]
	enddo i
	Txx[mu,nu] *= -2.0
	prepare Dxx_scf[mu,nu] += Txx[mu,nu]
    endpardo mu,nu
    server_barrier

    do ixyz
	ncount2 = (scalar)ixyz
	dsum = 0.0
	esum = 0.0
	pardo mu,nu
	    request Dxx_scf[mu,nu]
	    ncount1 = 0.0
	    execute compute_dipole_integrals DAOINT[mu,nu] ncount1 ncount2
	    NucDip[ixyz] = ncount1
	    Txx[mu,nu] = Dxx_scf[mu,nu]
	    etemp = Txx[mu,nu]*DAOINT[mu,nu]
	    esum += etemp
	endpardo mu,nu
	server_barrier
	collective dsum += esum
	server_barrier
	dsum += NucDip[ixyz]
	dipole[ixyz] = dsum

    enddo ixyz

    server_barrier

    ENDPROC form_Dscf

      PROC DABA 
#     --------- 
#
      PARDO a, a1, i  
#
            GET t1a_old[a,i] 
            GET l1a_old[i,a1] 
#
            Taa[a,a1]        = t1a_old[a,i]*l1a_old[i,a1] 
            Taa[a,a1]       *= 0.5 
            T1aa[a1,a]       = Taa[a,a1]  
            PUT Dab_a[a,a1] += Taa[a,a1] 
            PUT Dab_a[a1,a] += T1aa[a1,a] 
#
      ENDPARDO a, a1, i  
#
      PARDO a, a1, i  
#
            DO a2 
            DO i1 
#
               REQUEST T2old_aa[a,i,a2,i1]   
               REQUEST L2old_aa[i,a1,i1,a2]   
#
               Taa[a,a1]        = T2old_aa[a,i,a2,i1]*L2old_aa[i,a1,i1,a2]
               Taa[a,a1]       *= 0.25 
               T1aa[a1,a]       = Taa[a,a1]  
               PUT Dab_a[a,a1] += Taa[a,a1] 
               PUT Dab_a[a1,a] += T1aa[a1,a] 
#
            ENDDO i1 
            ENDDO a2 
#
      ENDPARDO a, a1, i  
#
      PARDO a, a1, i  
#
            DO b 
            DO j 
#
               REQUEST T2old_ab[a,i,b,j]   
               REQUEST L2old_ab[i,a1,j,b]   
#
               Taa[a,a1]        = T2old_ab[a,i,b,j]*L2old_ab[i,a1,j,b]
               Taa[a,a1]       *= 0.5 
               T1aa[a1,a]       = Taa[a,a1]  
               PUT Dab_a[a,a1] += Taa[a,a1] 
               PUT Dab_a[a1,a] += T1aa[a1,a] 
#
            ENDDO j 
            ENDDO b 
#
      ENDPARDO a, a1, i  
#
      ENDPROC DABA 

      PROC DIJA 
#     --------- 
#
      PARDO a, a1, i2 
#
            DO i 
#
               REQUEST T2old_aa[a,i,a1,i2]   
#
               DO i1 
#
                  REQUEST L2old_aa[i1,a,i2,a1]   
#
                  Tii[i,i1]        = T2old_aa[a,i,a1,i2]*L2old_aa[i1,a,i2,a1] 
                  Tii[i,i1]       *= -0.25   
                  T1ii[i1,i]       = Tii[i,i1] 
                  PUT Dij_a[i,i1] += Tii[i,i1] 
                  PUT Dij_a[i1,i] += T1ii[i1,i] 
#
               ENDDO i1 
#
            ENDDO i 
#
      ENDPARDO a, a1, i2 
#
      PARDO a, b, j 
#
            DO i 
#
               REQUEST T2old_ab[a,i,b,j]  
#
               DO i1 
#
                  REQUEST L2old_ab[i1,a,j,b]   
#
                  Tii[i,i1]        = T2old_ab[a,i,b,j]*L2old_ab[i1,a,j,b] 
                  Tii[i,i1]       *= -0.5   
                  T1ii[i1,i]       = Tii[i,i1] 
                  PUT Dij_a[i,i1] += Tii[i,i1] 
                  PUT Dij_a[i1,i] += T1ii[i1,i] 
#
               ENDDO i1 
#
            ENDDO i 
#
      ENDPARDO a, b, j 
#
      PARDO a, i, i1  
#
            GET t1a_old[a,i] 
            GET l1a_old[i1,a] 
#
            Tii[i,i1]        = l1a_old[i1,a]*t1a_old[a,i] 
            Tii[i,i1]       *= -0.5   
            T1ii[i1,i]       = Tii[i,i1] 
            PUT Dij_a[i,i1] += Tii[i,i1] 
            PUT Dij_a[i1,i] += T1ii[i1,i] 
#
      ENDPARDO a, i, i1  
#
      ENDPROC DIJA 

      PROC DIAA
#####
      pardo i,a
          get L1a_old[i,a]
	  Tia[i,a] = L1a_old[i,a]
	  put Dia_a[i,a] = Tia[i,a]
      endpardo i,a
#####
      ENDPROC DIAA

      PROC DAIA
#####
      pardo a,i
          get T1a_old[a,i]
	  Tai[a,i] = T1a_old[a,i]
	  put Dai_a[a,i] += Tai[a,i]
      endpardo a,i
#
      pardo a,i,b,j
          get L1a_old[j,b]
	  request T2old_ab[a,i,b,j]
	  request T2old_aa[a,i,b,j]

	  Tai[a,i]   = T2old_ab[a,i,b,j]*L1a_old[j,b]
	  T1ai[a,i]  = T2old_aa[a,i,b,j]*L1a_old[j,b]
	  
	  put Dai_a[a,i] += Tai[a,i]
	  put Dai_a[a,i] += T1ai[a,i]

      endpardo a,i,b,j

      pardo a,i,b,j
          get L1a_old[j,b]
	  get T1a_old[a,j]
	  get T1a_old[b,i]

	  Tii[j,i] = L1a_old[j,b]*T1a_old[b,i]
	  Tai[a,i] = T1a_old[a,j]*Tii[j,i]
	  Tai[a,i] *= -1.0
	  put Dai_a[a,i] += Tai[a,i]
      endpardo a,i,b,j

      pardo a,i,a1,i1
          request L2old_aa[i,a,i1,a1]
	  do b 
	      request T2old_aa[a,i,b,i1]
	      Taa[a1,b] = L2old_aa[i,a,i1,a1]*T2old_aa[a,i,b,i1]
	      Taa[a1,b] *= 0.5
	      put LTef[a1,b] += Taa[a1,b]
	  enddo b 
      endpardo a,i,a1,i1
      pardo a,i,a1,i1
          request L2old_ab[i,a,i1,a1]
	  do b 
	      request T2old_ab[a,i,b,i1]
	      Taa[a1,b] = L2old_ab[i,a,i1,a1]*T2old_ab[a,i,b,i1]
	      put LTef[a1,b] += Taa[a1,b]
	  enddo b 
      endpardo a,i,a1,i1

      pardo a,i,a1,i1
          request L2old_aa[i,a,i1,a1]
	  do j
	      request T2old_aa[a,i,a1,j]
	      Tii[i1,j] = L2old_aa[i,a,i1,a1]*T2old_aa[a,i,a1,j]
	      Tii[i1,j] *= 0.5
	      put LTmn[i1,j] += Tii[i1,j]
	  enddo j
      endpardo a,i,a1,i1

      pardo a,i,a1,i1
          request L2old_ab[i,a,i1,a1]
	  do j
	      request T2old_ab[a,i,a1,j]
	      Tii[i1,j] = L2old_ab[i,a,i1,a1]*T2old_ab[a,i,a1,j]
	      put LTmn[i1,j] += Tii[i1,j]
	  enddo j
      endpardo a,i,a1,i1
      server_barrier

      pardo a,i
          Tai[a,i] = 0.0
          do a1
	      get LTef[a,a1]
	      get T1a_old[a1,i]
	      T1ai[a,i] = LTef[a,a1]*T1a_old[a1,i]
	      Tai[a,i] += T1ai[a,i]
          enddo a1
          do i1
	      get LTmn[i,i1]
	      get T1a_old[a,i1]
	      T1ai[a,i] = T1a_old[a,i1]*LTmn[i,i1]
	      Tai[a,i] += T1ai[a,i]
          enddo i1
	  Tai[a,i] *= -1.0
	  put Dai_a[a,i] += Tai[a,i]
      endpardo a,i

#####
      ENDPROC DAIA
      
      PROC form_G1

    print " "
    restore_persistent dipole "scf_dipole"
    set_persistent dipole "scf_dipole"
    pardo p,p1
	prepare G1_a[p,p1] = 0.0
    endpardo p,p1
    server_barrier

    call DABA
    call DIJA
    call DIAA
    call DAIA
    server_barrier

    pardo i,i1
	get Dij_a[i,i1]
	Tii[i,i1]  = Dij_a[i,i1]
	Tii[i,i1] *= 2.0
	prepare G1_a[i,i1] = Tii[i,i1]
    endpardo i,i1
    pardo a,a1
	get Dab_a[a,a1]
	Taa[a,a1]  = Dab_a[a,a1]
	Taa[a,a1] *= 2.0
	prepare G1_a[a,a1] = Taa[a,a1]
    endpardo a,a1
    pardo i,a
	get Dia_a[i,a]
	Tia[i,a]  = Dia_a[i,a]
	Tia[i,a] *= 2.0
	prepare G1_a[i,a] = Tia[i,a]
    endpardo i,a
    pardo i,a
	get Dai_a[a,i]
	Tai[a,i]  = Dai_a[a,i]
	Tai[a,i] *= 2.0
	prepare G1_a[a,i] = Tai[a,i]
    endpardo i,a
    server_barrier
    pardo mu,nu
	prepare G1ao_a[mu,nu] = 0.0
    endpardo mu,nu
    server_barrier
    pardo mu,nu,p,p1
	request G1_a[p,p1]
	Tpx[p,nu] = G1_a[p,p1]*ca[nu,p1]
	Txx[mu,nu] = Tpx[p,nu]*ca[mu,p]
	prepare G1ao_a[mu,nu] += Txx[mu,nu]
    endpardo mu,nu,p,p1
    server_barrier

    do ixyz
	ncount2 = (scalar)ixyz
	esum = 0.0
	dsum = 0.0
	pardo mu,nu
	    request G1ao_a[mu,nu]
	    ncount1 = 0.0
	    execute compute_dipole_integrals DAOINT[mu,nu] ncount1 ncount2
	    Txx[mu,nu] = G1ao_a[mu,nu]
	    etemp = Txx[mu,nu]*DAOINT[mu,nu]
	    esum += etemp
	endpardo mu,nu
	server_barrier
	collective dsum += esum
	server_barrier
	dipole[ixyz] -= dsum

    enddo ixyz
    server_barrier
    print "CCSD response dipole moment"
    print dipole
    set_persistent dipole "ccsd_dipole"

      ENDPROC form_G1
#
# ------------------------------------------------------------------------------- 
#
#            MAIN
#
# PERFORM INITIALIZATION FOR TESTS  
# --------------------------------  
      print " "
      print "-- Parallel Lambda program"
      print "-- Ported by Jason N. Byrd, 2015"
      print " "
#
#     COMPUTE LAMBDA AMPLITUDES
#     ------------------------- 
#
      ecrit = cc_conv
      one = 1.0
      two = 2.0
      five  = 5.0
      six   = 6.0
      seven = 7.0
      eight = 8.0 
      nine = 9.0 
      ten = 10.0 

      diis_start = (scalar)scf_beg
      diis_order = (scalar)scf_hist
      Idiis_order = scf_hist

      print diis_start
      print diis_order
      print " "
#
# First read in the converged amplitudes
# --------------------------------------
#
      CALL READ_2EL 
#
# Compute Tau and Taup arrays 
# --------------------------- 
      CALL TAU 
      server_barrier  
#
# Compute permanent Intermediates 
# ------------------------------------- 
# 
      CALL FME 
      server_barrier 
      CALL F1AE 
      CALL F1MI  
      server_barrier 
#
      CALL W1MINJ 
      CALL W2MEBJ   
      server_barrier 
      server_barrier 
#
      CALL W1IMEN 
      CALL W1MEBJ_S  
      CALL W1EAFM_S  
#
# Done computing permanent Intermediates 
# -------------------------------------- 
#
# Start Iterations 
# ---------------- 
#
# Create initial guess
# --------------------
#
      CALL LIGUESS
      server_barrier 

      PARDO a, a1, i, i1 
            REQUEST                       L2old_ab[i,a,i1,a1]  
            REQUEST                       L2old_ab[i1,a,i,a1]  
            tiaia[i,a,i1,a1]            = L2old_ab[i,a,i1,a1] 
            t1iaia[i,a,i1,a1]           = L2old_ab[i1,a,i,a1] 
            tiaia[i,a,i1,a1]           -= t1iaia[i,a,i1,a1]
            PREPARE L2old_aa[i,a,i1,a1] = tiaia[i,a,i1,a1] 
      ENDPARDO a, a1, i, i1 
      server_barrier 
#
      CALL LOLDENERGY
      server_barrier 
      lambda_2_pseudo = ecorrT
      print lambda_2_pseudo

      eold = ecorrT 
#
      DO kiter 
         print " "
         print kiter
	 niter = (scalar)kiter

         PARDO a, a1, i, i1 
               REQUEST                       L2old_ab[i,a,i1,a1]  
               REQUEST                       L2old_ab[i1,a,i,a1]  
               tiaia[i,a,i1,a1]            = L2old_ab[i,a,i1,a1] 
               t1iaia[i,a,i1,a1]           = L2old_ab[i1,a,i,a1] 
               tiaia[i,a,i1,a1]           -= t1iaia[i,a,i1,a1]
               PREPARE L2old_aa[i,a,i1,a1] = tiaia[i,a,i1,a1] 
         ENDPARDO a, a1, i, i1 
         server_barrier 
#
# Zero-out new amplitudes 
# ----------------------- 
#
         CALL L2ZERO 
         server_barrier 
# 
# Compute temporary intermediates 
# ------------------------------- 
#
         CALL GAE 
         CALL GMI 
         server_barrier 
#
# Compute New L1 and L2 arrays 
# ---------------------------- 
#
         CALL L1ANEW 
         CALL L2NEWAB 
         CALL VABCD
         CALL W1EAFM
         CALL W1MEBJ  
         server_barrier 
#
# Update arrays 
# ------------- 
#
         CALL UPDATEL1 
         CALL UPDATEL2 
         server_barrier 
#
         CALL LOLDENERGY

	 #print ecorrT
#
	 if kiter >= (int)diis_start
	     call diisn
	 endif
#
         CALL MOVEL1
         CALL MOVEL2

         server_barrier 
         PARDO a, a1, i, i1 
               REQUEST                       L2old_ab[i,a,i1,a1]  
               REQUEST                       L2old_ab[i1,a,i,a1]  
               tiaia[i,a,i1,a1]            = L2old_ab[i,a,i1,a1] 
               t1iaia[i,a,i1,a1]           = L2old_ab[i1,a,i,a1] 
               tiaia[i,a,i1,a1]           -= t1iaia[i,a,i1,a1]
               PREPARE L2old_aa[i,a,i1,a1] = tiaia[i,a,i1,a1] 
         ENDPARDO a, a1, i, i1 
#
#        Check on convergence
#        --------------------
#
	 assert_same ecorrT
	 assert_same eold
         etemp = (eold - ecorrT)**(2.0)
         ediff = (etemp)**(0.5)
	 assert_same ediff
	 print ediff
         IF ediff < ecrit
            exit # kiter
         ENDIF

         server_barrier 
#
# Clean up temporary arrays
# -------------------------
         delete l1a_new
         delete Gae_a
         delete Gmi_a
#
#        Reset eold --> enew
#        -------------------
#
         eold = ecorrT
#
      ENDDO kiter
      server_barrier

      lambda_pseudo = ecorrT
      print lambda_pseudo
#
      
      print " "
      print "Computing CCSD 1-RDM"
#
    call form_G1

#
# Write amplitudes to file
# ------------------------
#
      set_persistent ca       "ca"
      set_persistent Fock_a   "fock_a"
      set_persistent t1a_old "t1a_old"
      set_persistent T2old_aa "T2old_aa"
      set_persistent T2old_ab "T2old_ab"
      set_persistent VSpipi "VSpipi"
      set_persistent Vaaii  "Vaaii"
      set_persistent Viaai  "Viaai"
      set_persistent VSaaai "VSaaai"
      set_persistent Vpiqj  "Vpiqj"
      set_persistent Vaabj     "Vaaai"
#
      set_persistent l1a_old  "l1a_old"
      set_persistent L2old_aa "l2old_aa"
      set_persistent L2old_ab "l2old_ab"
      server_barrier
#
                           ENDSIAL LAMBDA_SV1     
#
# EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 
#*
