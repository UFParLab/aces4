import "trans_frag_defs.sialx" 
sial frag_vars
# Declare indeces 
# --------------- 
#
      index   kiter  = 1: 25 # microiterations 
      index   jiter  = 1: 10 # macroiterations 
      index   ifrag  = 1: nfrags # Nsolute   
      index  iifrag  = 1: nfrags # Nsolute    
      index   katom  = 1: nfrags # Nfrags  
      index   jatom  = 1: nfrags # Nfrags  

      index   jfrag  = 1: nfrags # Nfragments   
      index  jjfrag  = 1: nfrags # Nfragments   
      index   kfrag  = 1: nfrags # Nfragments   
      index  kkfrag  = 1: nfrags # Nfragments   

      index   ao_scratch    = 1: max_aoseg    # maximum ao segment size 
      index   alpha_scratch = 1: max_alphaseg # maximum alpha segment size 
      index   beta_scratch  = 1: max_betaseg  # maximum beta segment size 

      index  isolute = 1: 1 
      index  jsolute = 1: 1 
      index      ii  = 1: 1  # 1 

      aoindex mu     = 1: norb 
      aoindex mu1    = 1: norb 
      aoindex nu     = 1: norb 
      aoindex nu1    = 1: norb 
      aoindex lambda = 1: norb 
      aoindex lambda1= 1: norb 
      aoindex sigma =  1: norb 
      aoindex sigma1=  1: norb 
#
      moaindex i = baocc: eaocc  
      moaindex i1= baocc: eaocc  
      moaindex i2= baocc: eaocc  
#
      moaindex a = bavirt: eavirt   
      moaindex a1= bavirt: eavirt   
      moaindex a2= bavirt: eavirt   
#
      moaindex j = baocc: eaocc  
      moaindex j1= baocc: eaocc  
#
      moaindex b = bavirt: eavirt   
      moaindex b1= bavirt: eavirt   
#
      moaindex p = baocc: eavirt
      moaindex p1= baocc: eavirt
#
      moaindex q = baocc: eavirt
      moaindex q1= baocc: eavirt

      index smu = 1:norb
      index si = baocc: eaocc
      index sa = bavirt: eavirt
#
# Declare scalars 
# --------------- 
#
      int rmaster
      scalar etemp 
      scalar etemp1
      scalar etemp2
      scalar etemp3
      scalar mone  
      scalar zero  
      scalar one 
      scalar two 
      scalar rank 
      scalar n_frags 
      scalar fcount 
      scalar icount 
      scalar jcount 
      scalar pcount 
      scalar qcount 
      scalar rcount 
      scalar scount 
      scalar i_aostart  
      scalar i_aoend   
      scalar j_aostart  
      scalar j_aoend   
      scalar i_vstart 
      scalar i_vend  
      scalar j_vstart 
      scalar j_vend  
      scalar a_vstart 
      scalar a_vend  
      scalar b_vstart 
      scalar b_vend  
      scalar m  
      scalar m1 
      scalar m2 
      scalar n  
      scalar n1 
      scalar n2 
      scalar l  
      scalar s  
      scalar r  
      scalar solute 
      scalar et1_correction 
      scalar et2_correction 
      scalar eold 
      scalar esum 
      scalar ediff
      scalar escr
      scalar e1x_at 
      scalar e10pol_at 
      scalar mono_lccd  
      scalar elccd
      scalar singles 
      scalar dimer_doubles 
      scalar fragment_doubles 
      scalar eint_tot 
      scalar eps1_pol 
      scalar e2x_at 
      scalar e1old 
      scalar e1new  
      scalar e2old 
      scalar e2new  
      scalar ao_exit
      scalar occ_exit 
      scalar virt_exit 
      scalar imax 
      scalar zmax 
      scalar nn_rep 
      scalar pair_flag  
      scalar do_iter 
      scalar xDip_tot 
      scalar yDip_tot 
      scalar zDip_tot 
      scalar se10c
      scalar stype 
#
# Declare arrays  
# -------------- 
      distributed Dca[mu,p] 
      distributed Dfock_a[p,p1] 
      distributed oed_ovl[mu,nu]  
      distributed SOVL[p,p1]  
      distributed Pbar1_ai[a,i] 
      distributed Hbar2_ia[i,a] 
      distributed V1_x[i,i1] 
      distributed Viijj_x[i,i1,j,j1]
      distributed Vxiij[mu,i,i1,j] 
      distributed Vjiij[j1,i,i1,j] 
      distributed Viiij[j1,i,i1,j] 
      distributed Vaaai[a,a1,a2,i] 
      distributed Viaii[i,a,i1,i2] 
      temp txxxp[mu,nu,lambda,p] 
      temp txxpp[mu,nu,p1,p] 
      temp txppp[mu,q,p1,p] 
      local Lxxxp[mu,nu,lambda,p] 
      local Lxxpp[mu,nu,p1,p] 
      local Lxppp[mu,q,p1,p] 
      local ca[mu,p] 
      static fock_a[p] 
      static Sx3[p] 
      temp t3[p] 
      temp t3_1[p] 
#
      temp aoint[mu,nu,lambda,sigma] 
      temp txxxq[mu,nu,lambda,q]   
      temp txpxq[mu,p,lambda,q]    
      temp txpxqS[mu,p,lambda,q]    
      temp txpqq[mu,p,q,j]   
      temp txpqqS[mu,p,q,j]   
      temp tppqq[p,p1,q,q1]   
      temp tppqqS[p,p1,q,q1]   
      temp tppppS[p,p1,q,q1]   
      temp t1ppqqS[p,p1,q,q1]   
      temp t1ppqq[p,p1,q,q1]   
      temp t2ppqq[p,p1,q,q1]   
      temp t3ppqq[p,p1,q,q1]   
      temp tpppp[p,p1,q,q1]   
      temp t1pppp[p,p1,q,q1]   
      temp t2pppp[p,p1,q,q1]   
      temp tpp[p,p1]   
      temp t1pp[p,p1]   
      temp t2pp[p,p1]   
      temp t3pp[p,p1]   
      temp taiai[a,i,a1,i1] 
      temp t1aiai[a,i,a1,i1] 
      temp t2aiai[a,i,a1,i1] 
      temp xaiai[a,i,a1,i1] 
      temp txixj[mu,i,nu,j] 

      local LVxxxq[mu,nu,lambda,j] 
      local LVxxqq[mu,nu,j,j1] 
      distributed Vxpbq[mu,i,b,j] 

      distributed Vaibj[a,i,b,j]
      distributed Viabj[i,a,b,j]
      distributed Vaajj[a,a1,j,j1]
      distributed Vaaaj[a,a1,a2,j]
      distributed Viijj[i,i1,j,j1]

      distributed Vxpxq[mu,i,lambda,j] 
      distributed Vxxqq[mu,nu,j1,j] 
      distributed Vxxai[mu,nu,a,i] 
      distributed Vxxqq_x[mu,nu,j1,j] 
      distributed Vpxxq[i,nu,mu,j] 

      distributed Vixbj[i,nu,b,j] 
      distributed Vaxaj[a,nu,b,j] 
      distributed Vixjj[i,nu,j,j1] 
      distributed Vaxjj[a,nu,j1,j] 

      distributed T20aiai[a,i,a1,i1] 
      distributed T2old[a,i,a1,i1] 
      distributed T2old_mono[a,i,a1,i1] 
      distributed T2new[a,i,a1,i1] 
      distributed TAO_ab[mu,i,nu,j] 
      distributed T2AO_ab[mu,i,nu,j] 
      
      temp tpxxq[p,nu,lambda,q] 
      temp tpxqq[p,nu,q,q1] 
      temp txxqq[mu,nu,q,j1] 
      temp Taixj[a,i,mu,j] 
      temp T1aixj[a,i,mu,j] 
      temp Txixi[nu,i,mu,j]

      temp Ipp[p,p1] 
      temp txj[mu,j]
      temp txx[mu,nu]
      temp t1xx[mu,nu]
      temp t2xx[mu,nu]
      temp t3xx[mu,nu]
      temp tbx[b,nu]
      temp tbj[b,j]
      temp tai[a,i] 
      temp t1ai[a,i] 
      temp txp[mu,p] 
      temp tpx[p,nu]
#
      local LDaixj[a,i,nu,j]

      distributed e20disp[ifrag,jfrag] 
      distributed e10exch[ifrag,jfrag] 
      distributed e20exch[ifrag,jfrag] 
      distributed e20exch_pbar[ifrag] 
      distributed e10pol[ifrag,jfrag] 
      distributed e10c[ifrag] 
      distributed e10c_old[ifrag] 
      distributed e1error[ifrag] 
      distributed e2_macro[ifrag] 
      distributed e20c[ifrag] 
      distributed e20c_old[ifrag] 
      distributed e2error[ifrag] 
      distributed d20c[ifrag,jfrag] 
      distributed d20c_old[ifrag,jfrag] 
      distributed d2error[ifrag,jfrag] 
      local sp[ifrag] 
      temp tp[ifrag] 
      temp t2p[ifrag] 
      distributed wC[p,p1]  
      distributed VE[p,p1]  
      distributed VE_x[p,p1]  
      distributed t1old[b,j]  
      distributed t1new[b,j]  
      distributed x1new[b,j]  
      distributed wC_ao[mu,nu] 
      distributed dip_xmom[kfrag] 
      distributed dip_ymom[kfrag] 
      distributed dip_zmom[kfrag] 
      temp dipT[kfrag] 
      distributed HFDENS[mu,nu] 
      distributed DENS_ao[mu,nu] 
      distributed DENSAA[p,p1] 
      temp LwC_ao[mu,nu] 
      local LwC[p,p1]  
      temp t20disp[ifrag,jfrag] 
      temp Tij[ifrag,jfrag]
      temp T1ij[ifrag,jfrag]
      local wAO_frag[mu] 
      local wOccA_frag[i] 
      local wOccB_frag[j] 
      local wVirtA_frag[a] 
      local wVirtB_frag[b] 
      local SwAO_frag[smu] 
      local SwOccA_frag[si]
      local SwOccB_frag[si]
      local SwVirtA_frag[sa]
      local SwVirtB_frag[sa]
      temp x1[mu]    
      temp x2[nu]    
      temp x3[lambda]
      temp x4[sigma] 
      temp xi[i]  
      temp xi1[i]  
      temp xi2[i]  
      temp xj[j]  
      temp xj1[j]  
      temp xa[a]  
      temp xa1[a]  
      temp xa2[a]  
      temp xb[b]  
      temp xb1[b]  

      local elst_dist[jfrag,kfrag]
      local rcut_dist[jfrag,kfrag]

      distributed DwAO_frag[mu]
      distributed DwOccA_frag[i]
      distributed DwOccB_frag[j]
      distributed DwVirtA_frag[a]
      distributed DwVirtB_frag[b]

      contiguous local macro_e20[ifrag] 
      contiguous local macro_d20[ifrag,jfrag] 
      contiguous local initial_e10c[ifrag]
      contiguous local final_e10c[ifrag]
      contiguous local final_e20disp[ifrag,jfrag]
      contiguous local final_e20exch[ifrag,jfrag]
      contiguous local final_e10pol[ifrag,jfrag]
      contiguous local final_e10exch[ifrag,jfrag]
      contiguous local monomer_lccd[ifrag]
      contiguous local x_dipole[kfrag]
      contiguous local y_dipole[kfrag]
      contiguous local z_dipole[kfrag]
      contiguous local abs_dipole[kfrag]

      contiguous local scr_1[ao_scratch,ao_scratch] 
      contiguous local scr_2[ao_scratch,ao_scratch] 
      contiguous local scr_3[ao_scratch,ao_scratch] 
      contiguous local scr_4[ao_scratch,ao_scratch] 
      contiguous local scr_5[ao_scratch,ao_scratch] 
endsial frag_vars
